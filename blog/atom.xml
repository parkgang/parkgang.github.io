<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://parkgang.github.io/blog</id>
    <title>parkgang.log Blog</title>
    <updated>2022-04-24T04:04:49.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://parkgang.github.io/blog"/>
    <subtitle>parkgang.log Blog</subtitle>
    <icon>https://parkgang.github.io/img/logo.png</icon>
    <entry>
        <title type="html"><![CDATA[소프트웨어 개발 능력은 정량적으로 측정이 왜 어려울까? (feat. 전공자가 바라보는 정보처리기사 실기)]]></title>
        <id>/2022/04/24/why-is-software-development-capability-difficult-to-quantitatively-measure</id>
        <link href="https://parkgang.github.io/blog/2022/04/24/why-is-software-development-capability-difficult-to-quantitatively-measure"/>
        <updated>2022-04-24T04:04:49.000Z</updated>
        <summary type="html"><![CDATA[정보처리기사를 공부하다 보면 왜 코딩 능력 보다 단어를 열심히 암기해야 합격할 수 있는 자격증인지 생각하게 됩니다. 그럼 전부 코딩 문제로 출제를 하면 되연 문제가 없을까요? 한번 생각해 봅시다.]]></summary>
        <content type="html"><![CDATA[<p>정보처리기사를 공부하다 보면 왜 코딩 능력 보다 단어를 열심히 암기해야 합격할 수 있는 자격증인지 생각하게 됩니다. 그럼 전부 코딩 문제로 출제를 하면 되연 문제가 없을까요? 한번 생각해 봅시다.</p><h2 class="anchor anchorWithHideOnScrollNavbar_GLuy" id="tldr">TL;DR<a class="hash-link" href="#tldr" title="제목으로 바로 가기">​</a></h2><ol><li>정처기 실기를 공부하면서 왜 코딩 능력 보다 단어를 열심히 암기해야 합격 여부가 판가름 되는 자격증인지 이게 과연 IT 분야에서 변별력을 가질 수 있는 자격증인지 생각을 하게 되었다.</li><li>그래서 정처기 실기를 전부 코딩 문제를 내면 정량적인 평가 방법일 까?라는 생각을 하게 되었다.</li><li>그렇게 생각을 해보니 소프트웨어 개발 즉, 프로그래밍이라는 것을 정량적으로 평가하는 것은 어렵다는 결론이 나왔다.</li></ol><h2 class="anchor anchorWithHideOnScrollNavbar_GLuy" id="서론">서론<a class="hash-link" href="#서론" title="제목으로 바로 가기">​</a></h2><div class="admonition admonition-note alert alert--secondary"><div class="admonition-heading"><h5><span class="admonition-icon"><svg xmlns="http://www.w3.org/2000/svg" width="14" height="16" viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>note</h5></div><div class="admonition-content"><p>이하 "정보처리기사" 용어를 "정처기" 라고 말하도록 하겠습니다.</p></div></div><p>IT 업계에서 정보처리기사 유무는 크지 않다는 것으로 알고 있습니다.</p><blockquote><p>있으면 좋지만 없어도 큰 문제가 없다.</p></blockquote><p>그러한 이유는 여러 가지가 있겠지만 필자가 생각하는 이유는 아래와 같다고 생각합니다.</p><ol><li>기사 시험임에 불구하고 관련 학과를 졸업하지 않은 비전공자도 시험에 응시할 수 있다.</li><li>개정 이전까지는 합격률이 높아서 변별력이 없었다.</li><li>정처기라는 자격증이 소프트웨어 개발 능력을 모두 대변하기엔 실무와 괴리감이 있다.</li></ol><p>그리고 개발자라는 직업을 고려할 때 많이 듣는 말로는 <code>평생 공부해야 하는 직업이다</code> 라고 말합니다.</p><p>이 말의 의미는 공부할 것이 많다는 것도 의미하지만 그만큼 개발 패러다임이 많이 변한다는 것도 내포합니다.</p><blockquote><p>1년 전 공부한 게 지금은 쓰이지 않는다...?</p></blockquote><p>이렇게 계속 변하는 학문을 정해진 시험 범위에서 시험을 통해 측정이 가능한가 싶기도 합니다.</p><blockquote><p>물론, 기초적인 CS의 경우는 측정이 충분히 가능할 것입니다.</p></blockquote><p>필자도 정처기 실기를 준비하고 있는데 여러 정보를 얻기 위해서 수제비 카페를 주로 방문합니다.</p><p>근데 여기서 <a href="https://cafe.naver.com/soojebi/87088" target="_blank" rel="noopener noreferrer">전공자분들 중 정처기 시험에 대해 불만의 목소리</a>를 볼 수 있었고 저 또한 정처기가 정말 전공자가 유리한 게 맞는가? 유리하지 않다면 왜 유리하지 않는 것인지 그럼 유리하게 시험 문제를 전부 코딩으로 내보면 어떨까? 라는 내용으로 생각을 공유하면 좋겠다 싶어서 글을 작성해 봅니다.</p><h2 class="anchor anchorWithHideOnScrollNavbar_GLuy" id="본론">본론<a class="hash-link" href="#본론" title="제목으로 바로 가기">​</a></h2><h3 class="anchor anchorWithHideOnScrollNavbar_GLuy" id="정처기-시험은-어떻게-진행되는가">정처기 시험은 어떻게 진행되는가?<a class="hash-link" href="#정처기-시험은-어떻게-진행되는가" title="제목으로 바로 가기">​</a></h3><p>우선 정처기 취득을 위해서는 <code>필기</code> 와 <code>실기</code> 의 과정을 거쳐야 하는데 <code>필기</code> 의 경우 객관식이므로 개념에 대해 이해한다면 편하게 풀 수 있기 때문에 넘어가도록 하겠습니다.</p><p>문제는 <code>실기</code> 인데요 이해보다 암기가 필요한 부분이 훨씬 많습니다. 실무에서 많이 사용될만한 용어도 대거 있지만 별로 사용되지 않거나 이런 것도 있구나 싶은 내용과 단어도 많습니다.</p><p>하지만 합격을 위해서는 이런 것도 있구나 하고 넘어갈 수 없습니다. 단답형과 약술형을 많이 맞추기 위해서는 많이 암기할수록 합격률이 높아지기 때문입니다.</p><p>결국 똑같이 새로운 단어를 외워야 하기 때문에 전공자이라서의 큰 메리트는 사라집니다.</p><p>그럼 역시 전공자라서 메리트라면 코딩, SQL 문제라고 생각하는데 20문제 중 평균적으로 6개 정도는 출제되므로 출제 비중이 높은 것을 알 수 있습니다.</p><h3 class="anchor anchorWithHideOnScrollNavbar_GLuy" id="그렇다고-해서-전공자가-유리한가">그렇다고 해서 전공자가 유리한가?<a class="hash-link" href="#그렇다고-해서-전공자가-유리한가" title="제목으로 바로 가기">​</a></h3><p>코딩, SQL 문제 비중이 높다고 해서 전공자가 유리한 가? 라고 생각하면 유리하긴 하지만 큰 상관은 없다고 생각합니다.</p><p>나오는 난이도가 쉬운 편이고 그것을 풀었다고 해서 개발 능력이 입증되는 것은 아니기 때문입니다.</p><p>그러면 정처기 실기의 경우 소프트웨어 개발 능력 입증을 위해서 문제를 전부 코딩, SQL로 출제하고 난이도를 높이면 좋지 아늘까?라는 생각을 할 수 있었습니다.</p><h3 class="anchor anchorWithHideOnScrollNavbar_GLuy" id="전부-코딩-sql-문제로-출제해도-문제일-것이다">전부 코딩, SQL 문제로 출제해도 문제일 것이다.<a class="hash-link" href="#전부-코딩-sql-문제로-출제해도-문제일-것이다" title="제목으로 바로 가기">​</a></h3><p>전부 코딩, SQL 문제로 출제하면 보이는 문제점은 답안 작성도 어렵지만 책점 기준도 모호할 것이라고 생각합니다.</p><p>당장 답안 작성만 생각해도 스트레스일 거 같은데 대학에 가면 주로 요구사항을 주고 손 코딩 문제를 보게 됩니다.</p><p>손 코딩을 할 때 중요하게 생각하는 건 로직, 반복되는 재사용 코드 줄이기 이런 것이 아닌 세미콜론은 잘 적었는지, 오타는 없는지 이런 것들로 점수가 판별되는 경우가 많습니다.</p><blockquote><p>실제 소프트웨어 개발 능력과 없는 것으로 스트레스를 받아야 함</p></blockquote><p>요즘은 개발 도구가 현대적인데 저런 사소한 것을 신경 쓰면서 코딩을 하는 것도 이상합니다. 그럼에도 손 코딩을 보는 이유는 PC으로 코딩을 위한 준비과정 Cost가 발생하며 부정행위를 모니터링하기도 어렵기 때문입니다. 그래서 대학에서 손 코딩을 선호하는 것으로 알고 있습니다.</p><blockquote><p>물론, 모든 대학을 대변하지 않으며 PC로 코딩 시험을 치를 수 있는 좋은 솔루션은 많을 것 입니다.</p></blockquote><p>어찌어찌해서 대부분의 수험생이 요구사항을 구현하고 Input, Output이 정상적으로 동작한다면 이후 변별력은 어떻게 구별할까요? 코드 줄 수가 적다고 해서 좋은 코드일까요? 코드 줄 수는 많은데 단일 책임 원칙으로 정교하게 분리된 코드가 좋은 코드일까요? 혹여나 Feature 중 반만 구현되었다면 점수는 어떻게 채점해야 될까요.</p><p>이처럼 소프트웨어는 바닥부터 차근차근 탑을 쌓듯이 완성되는 제품이며 중간까지만 구현을 마치면 매뉴얼대로 책점이 어렵고 하나의 요구사항에 대해 구현 방법도 여러 가지이기 때문에 소프트웨어 개발에 정답은 없고 이 때문에 정량적인 측정은 어려우며 개발자라는 직업이 경력과 경험이 우대된다고 생각됩니다.</p><p>지금까지 분석한 내용만 봐도 소프트웨어 개발이라는 능력을 정량적으로 측정하는 것은 매우 어렵다고 생각됩니다.</p><blockquote><p>근데 코딩 실력을 정량적으로 평가할 수 있는 솔루션이 있으면 나름대로 대박인 솔루션 이겠는데?</p></blockquote><h3 class="anchor anchorWithHideOnScrollNavbar_GLuy" id="코딩-테스트도-같은-맥락">코딩 테스트도 같은 맥락<a class="hash-link" href="#코딩-테스트도-같은-맥락" title="제목으로 바로 가기">​</a></h3><p>이외 비슷한 사례로 코딩 테스트가 떠오릅니다. 대부분의 회사에서 코딩 테스트를 이용해서 개발자를 판단하는 첫 척도로 사용합니다.</p><p>하지만 이 부분도 알다시피 코딩 테스트 즉, 알고리즘을 잘한다고 해서 개발을 꼭 잘하는 것은 아닙니다.
이 부분에 대해서는 여러 의견이 분분하지만 <strong>확실한 것은 잘하면 좋은 것이며 알고리즘이 중요한 것은 맞습니다.</strong></p><p>그럼에도 코딩 테스트라는 나름 정량적인 테스트를 통해 합격자를 필터링할 수 있을 것이지만 이 부분에서도 억울해하는 사람이 있을 수도 있는 것입니다. 코딩 테스트가 개발 능력을 전부 대변해 주지 않기 때문입니다.</p><h3 class="anchor anchorWithHideOnScrollNavbar_GLuy" id="종합하면">종합하면<a class="hash-link" href="#종합하면" title="제목으로 바로 가기">​</a></h3><p>이처럼 소프트웨어 개발 능력을 정략적으로 평가하는 것은 매우 어렵다고 느껴집니다.</p><p>이 때문에 정처기가 있다고 해서 개발의 기본은 하겠지라는 것을 보장할 수 없으며 IT 업계에서 정처기 유무는 크게 신경 쓰지 않는 것을 이해할 수 있습니다.</p><blockquote><p>물론 기본은 준비된 최소한의 CS를 아는 사람으로서는 인식될 수 있을 것입니다.</p></blockquote><h2 class="anchor anchorWithHideOnScrollNavbar_GLuy" id="결론">결론<a class="hash-link" href="#결론" title="제목으로 바로 가기">​</a></h2><p>실제 정처기 실기를 준비해 보면 코딩 공부보다는 열심히 단어를 외우고 있는 자신을 볼 수 있습니다.</p><p>정처기 실기를 공부하면서 이런 거 실무에서 안 쓸 거 같은데 왜 해야 되라고 짜증이 날 수도 있지만 위와 같은 insight으로 접근하면 조금의 짜증이 누그러질 수? 있다고 생각합니다.</p><p>누군가는 이 글을 통해 위로가 되었으면? 좋겠네요.</p><p>번외로 당연한 생각이라고 할 수도 있지만 필자는 이런 당연한 생각도 분석을 통해 그 생각의 결과를 글로 export 해서 정리할 수 있는 것도 개발에서 중요한 능력이라고 생각합니다.</p><p>실제 현업에서 개발보다 개발하면서 내가 겪은 문제를 일목요연하게 정리해서 상대방(e.g., 동료, PM)에게 전달하는 커뮤니케이션 능력이 중요하기 때문입니다.</p><p>프로그래밍이라는 것을 공부하면서 이런 것까지 insight를 가지고 대하다 보면 더 좋은 insight이 도출되지 않을까라고 생각됩니다.</p><p>여기까지 읽어주셔서 감사합니다 :)</p>]]></content>
        <category label="자격증" term="자격증"/>
        <category label="정보처리기사" term="정보처리기사"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[parkgang.log(2021)]]></title>
        <id>/2022/01/12/2021-retrospective</id>
        <link href="https://parkgang.github.io/blog/2022/01/12/2021-retrospective"/>
        <updated>2022-01-12T13:02:26.000Z</updated>
        <content type="html"><![CDATA[<p>정말 바쁘다고 생각했던 2021이 지나갔습니다. 대학 졸업도 하고 여러모로 Big Event가 많아서 한 달 한 달이 묵직했던 거 같아요. 축약해서 이번 연도 회고와 내년을 위한 목표를 정리해 보도록 하겠습니다.</p><div class="admonition admonition-info alert alert--info"><div class="admonition-heading"><h5><span class="admonition-icon"><svg xmlns="http://www.w3.org/2000/svg" width="14" height="16" viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>데일리 커밋도 성실히 성공</h5></div><div class="admonition-content"><p><img loading="lazy" src="/assets/images/1-ae0bb3a34102535ca119db2af10591f1.png" class="img_dxBE"></p></div></div><div class="admonition admonition-info alert alert--info"><div class="admonition-heading"><h5><span class="admonition-icon"><svg xmlns="http://www.w3.org/2000/svg" width="14" height="16" viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>가슴이 웅장해지는 공부량</h5></div><div class="admonition-content"><p><img loading="lazy" src="/assets/images/2-fea220931f35c15b335a30020923629e.png" class="img_dxBE"></p></div></div><h2 class="anchor anchorWithHideOnScrollNavbar_GLuy" id="tldr">TL;DR<a class="hash-link" href="#tldr" title="제목으로 바로 가기">​</a></h2><ol><li>Go 언어 학습</li><li>CI/CD 고도화 (use k8s)</li><li>첫 제품 제작 느낀 Front-end Engineer로써</li><li>졸업작품 최우수상과 대학교 졸업</li><li>병특 유무는!?</li></ol><h2 class="anchor anchorWithHideOnScrollNavbar_GLuy" id="go-언어와-k8s">Go 언어와 k8s<a class="hash-link" href="#go-언어와-k8s" title="제목으로 바로 가기">​</a></h2><p>TS는 자신 있고 재밌게 사용할 수 있는데 인터프리터 기반의 script 언어만 가지고 있기엔 뭔가 아쉬워서 low-level의 컴파일 언어를 배워보고 싶었습니다.</p><p>딱 떠오르고 핫한 언어가 Rust와 Go가 있었는데 Go가 Docker, k8s와 같이 성공한 프로젝트가 있기도 하고 실제 사용하는 제품이 늘어나는 추세로 보여서 Go를 배우게 되었습니다.</p><p>사실 Go가 그렇게 좋다고 하길래 너무 궁금해서 배워본 것도 있고 DevOps의 Tool 체인들이 Go로 작성된 것도 많아서 배워서 나쁠 것은 없다고 생각했습니다.</p><p>추가적으로 작년에 CI/CD로 자동화 Pipeline까지는 구축할 수 있는데 뭔가 모를 아쉬움이 있어서 더 고도화 시켜보고 싶은 마음에 k8s을 공부하게 되었습니다.</p><p>공부한 k8s을 졸업 작품에 실제로 사용하면서 많은 경험치를 획득할 수 있었는데 배우길 잘했다고 생각이 듭니다.</p><blockquote><p>역시 배포는 너무 재밌어</p></blockquote><h2 class="anchor anchorWithHideOnScrollNavbar_GLuy" id="제품이라고-불릴-수-있는-소프트웨어란-ps-front-end-engineer">제품이라고 불릴 수 있는 소프트웨어란 (ps. Front-end Engineer)<a class="hash-link" href="#제품이라고-불릴-수-있는-소프트웨어란-ps-front-end-engineer" title="제목으로 바로 가기">​</a></h2><p>이번 연도에 직무에서 크게 변한 것은 내가 Front-end Engineer으로 써 제품을 만들 수 있다는 것이었습니다.</p><blockquote><p>아직 부족한 게 많지만...</p></blockquote><p>이전까지는 제품 유지 보수 및 Power App이라는 비 개발자 개발 도구를 이용하여 제품을 만들었었는데 드디어 코드로써 개발에 들어갈 수 있게 되었습니다.</p><p>실제 실무에서 제품 퀄리티의 개발을 하면서 느낀 점이 매우 많았는데 사실 이전까지는 소프트웨어라고 한다면 프로그래밍 언어를 가지고 뭐든 만들면 된다! 실행되고 돌아가면 된다! 문제가 생기면 고쳐주면 되는 거고 프로그래밍 문법을 알면 언제든지 시간을 투자해서 고칠 수 있으니까 문제가 없다!라고 생각했습니다.</p><p>사실 위에 한말은 비즈니스 개발을 한 번도 안 했을 때 발생할 수 있는 착각이었습니다.</p><p>개발자는 항상 바쁘고 일정에 따라 움직이기 때문에 제한적인 시간안에 output을 도출해야 되고 내가 만든 프로그램이 정상적으로 수행되는지 로그로써 남기고 추적도 가능해야 되고 성능도 고려해야 되고 엄청나게 많습니다.</p><p>그냥 프로그래밍 언어를 배워서 서비스 하나 만들어봤어요!로 느낄 수 없는 경험들이 많았습니다.</p><p>그래서 중점적으로 느낀 점이 무엇이냐고 말한다면</p><ol><li>프로그래밍 언어와 프레임워크에 대한 이해도가 중요하다.<ol><li>당연한 말이긴 한데 프로그래밍 언어와 프레임워크에 대한 이해도가 적어도 제품을 만들 수야 있긴 하지만 시간이 지날수록 기술 부체에 부딪히며 일정 산출에 스트레스를 받는 자신을 본다면 무슨 말인지 이해가 될 것입니다.</li><li>백날 언어 문법이나 프레임워크 사용법만 익히더라도 이슈 발생 시 <code>제한된 시간</code> 안에 트러블 슈팅에 성공하려면 정말 많은 경험과 실력이 필요한 것을 느꼈습니다.</li><li>되게 당연할 말을 적어놨는데 지금이라도 실력이 없는 것을 인정하고 공부할 준비가 되었다면 반은 온 것이라고 생각합니다.</li></ol></li><li>모니터링(로깅)<ol><li>내가 만든 제품이 정상적으로 수행되는지 성공률과 실패율 등등 여러 지표를 로깅하고 추적할 수 있는 시스템을 만드는 것이 중요하다는 것을 느꼈습니다.</li><li>실제로 해보니 생각보다 어려운 부분이어서 작년이 CI/CD 고도화이라면 이번 연도는 모니터링, E2E 테스트와 같은 운영성에 초점을 두고 공부하게 될 거 같습니다.</li></ol></li></ol><h2 class="anchor anchorWithHideOnScrollNavbar_GLuy" id="대학교-졸업">대학교 졸업!<a class="hash-link" href="#대학교-졸업" title="제목으로 바로 가기">​</a></h2><p>학교와 회사를 병행하던 대학교의 마지막 학기를 드디어 끝났습니다! 🥳</p><p>아직 공식적으로 졸업장이 나온 것은 아니지만 이제 대학교에 안 간다는 사실이 시원섭섭하지만 개인 시간이 생겼다는 기쁨이 존재합니다.</p><p>졸업작품까지 최우수상에 수상하면서 뿌듯하게 졸업할 수 있을 거 같아요.</p><div class="admonition admonition-info alert alert--info"><div class="admonition-heading"><h5><span class="admonition-icon"><svg xmlns="http://www.w3.org/2000/svg" width="14" height="16" viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>info</h5></div><div class="admonition-content"><p>졸업작품 프로젝트를 어떻게 설계했는지 궁금하면 <a href="/series/workflows-with-aks-github-slack/">여기를 클릭해보세요.</a></p></div></div><h2 class="anchor anchorWithHideOnScrollNavbar_GLuy" id="산업기능요원-병역특례">산업기능요원 (병역특례)<a class="hash-link" href="#산업기능요원-병역특례" title="제목으로 바로 가기">​</a></h2><p>그리고 가장 큰 문제인 군대... 🪖 저는 특성화 고교를 나와서 대학교와 병행하더라도 병특을 받을 수 있는 기회가 있었는데 배정 순위가 낮아서 사실 기대하지 않고 있었습니다.</p><p>하지만 신이 주신 기회인지는 몰라도 여러 운이 겹쳐서 제가 산업기능요원 TO을 받게 되었습니다!</p><p>그래서 사실 산업기능요원 편입 신청이 확정되면 회고를 작성하려고 했는데 문제가 발생했습니다...</p><p>대학교에 재학 중이고 곧 졸업이기 때문에 기사 자격증이 필요하다는 것이었는데 이 때문에 편입 서류에서 탈락되었습니다. 🤯 😱 😵‍💫</p><p>당연히 대학교 재학 중이니까 산업기사나 기사 준비는 당연한 게 아니냐? 할 수 있지만 개인-내부적으로 복잡한 사연이 너무 많았습니다. 하지만 이미 지나간 일이고 덕분에 이번 연도 목표 1순위가 기사 자격증 취득으로 변경되었습니다.</p><h2 class="anchor anchorWithHideOnScrollNavbar_GLuy" id="이외">이외<a class="hash-link" href="#이외" title="제목으로 바로 가기">​</a></h2><ol><li>TDD 하려고 jest도 공부했는데 한 번도 사용하지 못헀다...</li><li>SRE을 경험할 수 있었다.</li><li>이외는 notion에 정리된 study의 모든 것!</li></ol><h2 class="anchor anchorWithHideOnScrollNavbar_GLuy" id="앞으로는">앞으로는?<a class="hash-link" href="#앞으로는" title="제목으로 바로 가기">​</a></h2><p>마일스톤은 단한 게! 정보 처리 기사 취득입니다. 지금까지 열심히 한 것이 아까워서 꼭 병특을 받고 싶네요.</p><p>이제 제품 개발 능력보다는 고도화에 관심이 가고 있습니다. 어떻게 해야지 더 우아하고 적은 코드량으로 개발할 수 있을까? SRE을 통한 운영성도 기르고 싶습니다.</p><p>현재까지 주 업무는 Front-end 이지만 개인적으로 Back-end, DevOps도 계속 공부하고 있고 모두 재밌기 때문에 나는 <code>???</code> 엔지니어에요! 라고 자신있게 말할 포지션을 못 정했습니다.</p><p>내년에는 포지션을 과연 정할 수 있을지? 병특을 받아서 군대에 안 갈지? 관전 포인트가 될 거 같습니다.</p><p>2022년도 화이팅! 하기를 바라며~ 회고록을 마치도록 하겠습니다. 읽어주셔서 감사합니다 :)</p>]]></content>
        <category label="개인 회고" term="개인 회고"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[MSA로 개발해 본 Belf 프로젝트 회고]]></title>
        <id>/2021/12/26/belf-project-retrospective</id>
        <link href="https://parkgang.github.io/blog/2021/12/26/belf-project-retrospective"/>
        <updated>2021-12-26T13:13:10.000Z</updated>
        <content type="html"><![CDATA[<table><thead><tr><th align="center">Mobile</th><th align="center">PCㅤㅤㅤㅤㅤㅤㅤㅤㅤㅤㅤ</th></tr></thead><tbody><tr><td align="center"><img loading="lazy" src="/assets/images/1-3683d5f4d44de4fb6835f584681a5a52.jpeg" width="170" alt="drawing" class="img_dxBE"></td><td align="center"><img loading="lazy" src="/assets/images/thumbnail-727295aac488af74fd01704fc257ab8c.png" width="540" alt="drawing" class="img_dxBE"></td></tr></tbody></table><p>첫 <code>MSA</code> 를 적용하여 만들어진 프로젝트가 성공적으로 종료되어 이에 대한 회고를 해보려고 합니다.</p><p>해당 프로젝트는 졸업과제로 진행되었으며 약 <code>2021.03.10</code> ~ <code>2021.12.18</code> 까지 진행되므로 거즘 1년 동안 진행되었습니다.</p><p>저는 프로젝트에서 PM과 devops를 담당했으며 팀원들이 개발에만 집중할 수 있도록 환경을 만들어주고 <code>front-end</code>, <code>back-end</code> 모두 issue 발생 시 서포트해 주었습니다. 이외 <a href="https://github.com/belf-kr/oauth-server" target="_blank" rel="noopener noreferrer">oauth-server</a> 제품도 개발하였습니다.</p><h2 class="anchor anchorWithHideOnScrollNavbar_GLuy" id="프로젝트-정보-">프로젝트 정보 🔥<a class="hash-link" href="#프로젝트-정보-" title="제목으로 바로 가기">​</a></h2><div class="admonition admonition-note alert alert--secondary"><div class="admonition-heading"><h5><span class="admonition-icon"><svg xmlns="http://www.w3.org/2000/svg" width="14" height="16" viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>note</h5></div><div class="admonition-content"><p>관련 내용이 여러 군대로 파편화되어 링크로 제공되었습니다. 😂</p></div></div><ol><li><a href="https://github.com/belf-kr/.github/blob/main/profile/README.md" target="_blank" rel="noopener noreferrer">소개</a></li><li><a href="https://github.com/belf-kr" target="_blank" rel="noopener noreferrer">project github</a></li><li><a href="https://parkgang.notion.site/6de1a3d7002f4a46ab713e7d6846c490?v=52125eaffbf24e9ca82114b4c2441c80" target="_blank" rel="noopener noreferrer">팀원</a></li><li><a href="https://parkgang.notion.site/36f01d56dff643dfa1db264e33f18d7d" target="_blank" rel="noopener noreferrer">서비스 사용 매뉴얼</a></li><li><a href="https://parkgang.notion.site/Belf-27b87963790b4e43baae2e0c3c6ae123" target="_blank" rel="noopener noreferrer">notion 구경하기 "여기에 모든 정보가 작성되어있어요!"</a></li></ol><h2 class="anchor anchorWithHideOnScrollNavbar_GLuy" id="서비스-접속-주소-">서비스 접속 주소 ✨<a class="hash-link" href="#서비스-접속-주소-" title="제목으로 바로 가기">​</a></h2><div class="admonition admonition-info alert alert--info"><div class="admonition-heading"><h5><span class="admonition-icon"><svg xmlns="http://www.w3.org/2000/svg" width="14" height="16" viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>info</h5></div><div class="admonition-content"><p>서버가 down되어 있을 수 있습니다.</p></div></div><ol><li><a href="https://belf.xyz" target="_blank" rel="noopener noreferrer">prod "실 서비스"</a></li><li><a href="https://qa.belf.xyz" target="_blank" rel="noopener noreferrer">qa</a></li></ol><h2 class="anchor anchorWithHideOnScrollNavbar_GLuy" id="background">Background<a class="hash-link" href="#background" title="제목으로 바로 가기">​</a></h2><blockquote><p>사용자의 코스를 공유하는 Todo 서비스</p></blockquote><p>todo의 기능과 github fork에 영감을 받아서 제작된 웹앱 제품입니다.</p><p>이번 프로젝트를 진행하면서 얻을 수 있는 값진 경험치는 k8s의 운영 경험과 정의된 워크플로우 안에서 팀원과 함께 협업하여 제품을 개발한 것입니다.</p><p>CI/CD 및 워크플로우의 경우 내용이 너무 길어서 설계부터 실습까지 <a href="/series/workflows-with-aks-github-slack/blueprint/">blueprint</a> 에 정리해놓았으니 궁금하다면 구경해주세요.</p><p>이번 회고에서는 프로젝트를 진행하면서 전체적으로 경험한 것에 대해 회고하려고 합니다.</p><h3 class="anchor anchorWithHideOnScrollNavbar_GLuy" id="pm으로써">PM으로써<a class="hash-link" href="#pm으로써" title="제목으로 바로 가기">​</a></h3><p><a href="/series/workflows-with-aks-github-slack/blueprint/">blueprint</a> 에도 명시되어있지만 팀원의 대부분은 이미 개발자로써 직장 생활을 하고 있어서 개발을 어떻게 해야 하는지 개발 프로세스가 왜 중요한 지에 대한 설명까지는 필요가 없는 상태이었습니다.</p><p>적어도 웹앱의 개발 시작에 대한 기초적인 Background가 있는 상태이라서 어떤 개발 프로세스와 역할 배정을 해야지 최고의 효율을 뽑을 수 있을지 고민을 해보았습니다.</p><p>팀원이 좋아하고 자신 있어 하는 stack이 달라서 하나의 언어와 프레임워크로 가기는 어려웠고 MSA를 사용할 만큼 큰 규모의 서비스는 아니지만 다들 작장 생활하느라 개발 주기도 일정하지 않고 그냥 서비스를 하나 독립적으로 담당하는 게 더 좋지 아늘까? 생각이 들었고 무엇보다 제가 MSA으로 프로젝트를 진행해보고 싶었습니다.</p><p>이전에 k8s에 대해 이론 및 간단한 사용법은 공부했는데 실제로 프로젝트에 사용해보지 않아서 사용해보고 싶기도 했고 MSA를 하면서 여러 issue를 접해보고 싶었습니다.</p><h3 class="anchor anchorWithHideOnScrollNavbar_GLuy" id="msa">MSA<a class="hash-link" href="#msa" title="제목으로 바로 가기">​</a></h3><p>MSA는 MicroService Architecture의 줄임말으로써 그냥 쉽게 Service를 Micro하게 잘게 분리하는 Architecture를 말합니다.</p><p>사실 MSA는 이론 자체는 어렵지 않다고 생각합니다. 문제는 Micro 분리하는 Service 기준을 잘 정해야한다는 것이죠 이외 분산된 환경에서 로깅 및 insight를 도출 등 어려운 문제도 많습니다 하지만 해당 Architecture가 지향하는 목표는 심플하다고 생각합니다.</p><p>해당 프로젝트에서는 팀원이 수직적으로 담당할 수 있는 하나의 repo를 기준으로 Service를 분리하였습니다.</p><blockquote><p>즉, repo를 하나의 엔지니어가 담당하는 구조인거죠!</p></blockquote><p>대외적으로 MSA에 알려진 장점으로 뭐 단독 제품으로 쉽게 배포를 할 수 있다 등은 쉽게 체감할 수 있었습니다. 대외적인 것이외 제가 느낄 수 있었던 것의 <code>장점</code> 으로는 엔지니어가 하나의 service를 담당하고 있으니까 커뮤니케이션이 편리하였습니다. 제품에 대해 가장 잘 알고있기도 하고 하나면 집중하면 되는 환경이 되었습니다. <code>단점</code> 으로는 관리 포인트가 엄청나게 증가하였습니다. 사실 이부분은 진행해보니 구조의 결함일 수도 있긴한데 하나의 Service에서 CI/CD에 결함이 포착되었다면? 이외의 Service도 대응해주고 확인을 해줘야했고 MSA를 적용하면서 약간 당연하게? 겪을 수 있는 문제일 수 있지만 Service의 interface 파편화되는 것도 있었습니다.</p><p>그럼에도 불구하고 MSA를 통해서 생산성에 도움은 되었지만 확실히 거대 규모의 Service에서 어울리는 Architecture라는 인상이 강해졌습니다.</p><h3 class="anchor anchorWithHideOnScrollNavbar_GLuy" id="k8s">k8s<a class="hash-link" href="#k8s" title="제목으로 바로 가기">​</a></h3><p>MSA와 찰떡 궁합인 k8s 입니다. 해당 프로젝트에서는 AKS를 사용하여 배포하게 되었습니다.</p><p>실제 서비스를 운영한다는 마음으로 namespace도 정의하고 configmap으로 pod들도 관리하고 L7도 설정하고 해보면서 많은 경험을 얻을 수 있었습니다.</p><p>특히, k8s cluster 사양이 높지 않은데 가뜩이나 <code>qa</code> 와 <code>prod</code> 의 환경을 구분해서 많은 pod이 띄어지면서 발생한 k8s scheduler 배치 이슈 및 container 성능 이슈도 잡아보고 어떻게 object을 네이밍하면 좋을 지도 생각할 수 있는 계기가 되었습니다.</p><p>확실히 운영이라는 것을 해보면서 얻는 경험치는 말로 다 할 수 없는 거 같습니다.</p><blockquote><p>이외에도 <code>prod</code> 에는 mysql replication을 사용해보는 등 재밌는 경험을 해봤습니다.</p></blockquote><h2 class="anchor anchorWithHideOnScrollNavbar_GLuy" id="트러블-슈팅-내역">트러블 슈팅 내역<a class="hash-link" href="#트러블-슈팅-내역" title="제목으로 바로 가기">​</a></h2><p>이외 해당 프로젝트를 진행하면서 발생한 트러블 슈팅 내역은 <a href="https://parkgang.notion.site/Issue-e38806db386346448681eb165327031f" target="_blank" rel="noopener noreferrer">Issue</a> 에 작성되어있습니다.</p><h2 class="anchor anchorWithHideOnScrollNavbar_GLuy" id="느낀-점">느낀 점<a class="hash-link" href="#느낀-점" title="제목으로 바로 가기">​</a></h2><p>k8s와 golang에 대한 제품이 없어서 아쉬웠는데 이번 프로젝트를 통해 만들 수 있어서 기뻤고 <code>qa</code>, <code>prod</code> 환경을 구분해서 <code>prod</code> 이전에 미리 사용성 및 버그를 확인할 수 있어서 미리 대응된 case 들도 있는데 이런 것을 보면서 환경 구분을 잘 해놨구나 하는 뿌듯함도 있었습니다.</p><p>이외에도 CI/CD Pipline을 한번 만들면 영원히 잘 돌아갈 줄 알았는데 중간에 예상하지 못한 곳에서 고장이 난 것도 꽤 신기한 경험이었습니다.</p><blockquote><p>난 영원할 줄 알았는데...</p></blockquote><h2 class="anchor anchorWithHideOnScrollNavbar_GLuy" id="마무리">마무리<a class="hash-link" href="#마무리" title="제목으로 바로 가기">​</a></h2><p>성공적으로 프로젝트는 마무리되었고 많은 경험을 할 수 있었습니다.</p><p>아쉬운 것은 프로젝트가 끝날 때 쯤에서야 팀원들이 온보딩이 완료되어 더 주기적으로 개발하여 좋은 퀄리티의 서비스를 만들 수 있었을 꺼 같지만 다음을 기약하고 넘어가게 되었습니다.</p><p>그래도 이번 프로젝트를 계기로 개발 프로세스부터 배포까지 설계하고 서비스를 운영할 수 있는 자신감이라는 것은 생겼습니다.</p><blockquote><p>물론 로깅관련 부분이 부족해서 빨리 이부분을 보안하고 싶네요!</p></blockquote><p>다음 번에 더 좋은 제품을 만들 수 있도록 기약하며 회고를 마치도록 하겠습니다. 읽어주셔서 감사합니다. 😀</p>]]></content>
        <category label="프로젝트 회고" term="프로젝트 회고"/>
        <category label="MSA" term="MSA"/>
        <category label="졸업작품" term="졸업작품"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[k8s의 EXTERNAL-IP는 Azure에서 어떻게 처리될까?]]></title>
        <id>/2021/12/06/how-is-k8s-external-ip-handled-in-azure</id>
        <link href="https://parkgang.github.io/blog/2021/12/06/how-is-k8s-external-ip-handled-in-azure"/>
        <updated>2021-12-05T20:13:24.000Z</updated>
        <summary type="html"><![CDATA[k8s는 ingress를 통해 외부의 트래픽을 받아올 수 있습니다. 근데 AKS와 같은 클라우드 환경에서 사용하면 ingress IP은 어디서 생성되었으며 어떻게 Load balancing이 되는지에 설명합니다.]]></summary>
        <content type="html"><![CDATA[<p>k8s는 ingress를 통해 외부의 트래픽을 받아올 수 있습니다. 근데 AKS와 같은 클라우드 환경에서 사용하면 ingress IP은 어디서 생성되었으며 어떻게 Load balancing이 되는지에 설명합니다.</p><p>Azure에서 AKS를 사용하면서 문득 이런 궁금증이 생겼습니다.</p><blockquote><p>ingress를 통해 외부의 트래픽을 받아오는데 ingress IP은 어디서 생성되었으며 어떻게 Load balancing이 되는거지?</p></blockquote><blockquote><p>svc를 LoadBalancer으로 생성하는 경우 IP가 생성되는데 어디서 생성된거지? 해당 IP는 어떻게 Load balancing 된다고 장담할 수 있는거지?</p></blockquote><p>Azure에 k8s cluster를 올려놓고 k8s의 spec에 맞게 <code>.yaml</code> 을 적용하면 예상하는 대로 동작이 되어서 Azure가 핸들링 한건지 k8s가 핸들링한건지 큰 관심을 안가지고 있었는데 AKS 관련 내용을 정리하다가 갑자기 궁금해져서 간단하게 찾아보고 정리하려고 합니다.</p><h2 class="anchor anchorWithHideOnScrollNavbar_GLuy" id="리소스-관련이므로-azure가-하겠지">리소스 관련이므로 Azure가 하겠지?<a class="hash-link" href="#리소스-관련이므로-azure가-하겠지" title="제목으로 바로 가기">​</a></h2><p>IP 생성이랑 Load balancing 이부분은 리소스를 제공하는 Azure만 핸들링할 수 있다고 생각합니다.</p><p>그렇다면 어떤 리소스 타입으로 핸들링하느냐를 찾아야하는대 생각보다 쉽게 찾을 수 있었습니다.</p><h2 class="anchor anchorWithHideOnScrollNavbar_GLuy" id="부하-분산-장치와-공용-ip-주소">부하 분산 장치와 공용 IP 주소<a class="hash-link" href="#부하-분산-장치와-공용-ip-주소" title="제목으로 바로 가기">​</a></h2><p>AKS를 생성하면 자동으로 <code>부하 분산 장치</code> 라는 리소스가 생성됩니다.</p><p>또한, ingress를 설치하고 LoadBalancer type svc를 생성하다 보면 리소스 그룹에서 <code>공용 IP 주소</code> 라는 것을 쉽게 찾아볼 수 있습니다.</p><p><img loading="lazy" src="/assets/images/1-5458f2a4cded0c3f516fc818eaca2615.png" class="img_dxBE"></p><p>결론부터 말하면 <code>공용 IP 주소</code> 가 하나의 IP 주소에 대한 리소스이며 k8s svc의 <code>EXTERNAL-IP</code> 를 의미합니다. <code>부하 분산 장치</code> 는 여러개의 <code>공용 IP 주소</code> 를 IP 구성으로 가지고 있습니다.</p><p>그러면 ingress가 생성되거나 혹은 LoadBalancer type svc가 생성되는 것처럼 <code>외부 IP가 필요한 경우</code> Azure가 알아서 <code>공용 IP 주소</code> 를 생성하고 <code>부하 분산 장치</code> 에 바인딩 해주는 거라고 생각할 수 있습니다.</p><blockquote><p>이러니까 이해가 되네...</p></blockquote><h2 class="anchor anchorWithHideOnScrollNavbar_GLuy" id="실제로-그런지-확인해보자">실제로 그런지 확인해보자<a class="hash-link" href="#실제로-그런지-확인해보자" title="제목으로 바로 가기">​</a></h2><p>실제로 그런지 한번 확인해보겠습니다. 위의 캡처 사진은 belf project에서 사용된 리소스 그룹을 캡처한 것인데 외부로 노출되는 svc는 모두 <a href="https://github.com/belf-kr/infrastructure-as-code/tree/v0.3.1" target="_blank" rel="noopener noreferrer">belf-kr/infrastructure-as-code</a> 에서 소비되고 있었습니다.</p><p><code>.yaml</code> 을 읽기 귀찮으신 분들을 위하여 외부로 노출된 svc를 나열해 드리면 아래와 같습니다.</p><table><thead><tr><th>ns</th><th>name</th><th>이유</th></tr></thead><tbody><tr><td>ingress-basic</td><td>nginx-ingress-ingress-nginx-controller</td><td><a href="https://docs.microsoft.com/ko-kr/azure/aks/ingress-tls" target="_blank" rel="noopener noreferrer">HTTPS 수신 컨트롤러</a> 를 사용하기 위함</td></tr><tr><td>qa</td><td>mysql-lb</td><td>qa 환경 mysql 데이터 조회를 팀원도 조회할 수 있도록 외부로 노출하기 위함</td></tr><tr><td>qa</td><td>redis-lb</td><td>qa 환경 redis 데이터 조회를 팀원도 조회할 수 있도록 외부로 노출하기 위함</td></tr></tbody></table><div class="admonition admonition-info alert alert--info"><div class="admonition-heading"><h5><span class="admonition-icon"><svg xmlns="http://www.w3.org/2000/svg" width="14" height="16" viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>info</h5></div><div class="admonition-content"><p><code>kubectl get services --all-namespaces</code>
<img loading="lazy" src="/assets/images/2-0-bdf508980341120bed250a75cee39d98.png" class="img_dxBE"></p></div></div><div class="admonition admonition-info alert alert--info"><div class="admonition-heading"><h5><span class="admonition-icon"><svg xmlns="http://www.w3.org/2000/svg" width="14" height="16" viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>info</h5></div><div class="admonition-content"><p><code>부하 분산 장치</code>
<img loading="lazy" src="/assets/images/2-1-5c9b902eea0b7460143f5e699388ff58.png" class="img_dxBE"></p></div></div><p>외부로 노출된 svc는 총 3개인데 위의 리소스 그룹에서는 <code>공용 IP 주소</code> 가 4개가 존재하였습니다. 한개는 뭘까요?</p><h2 class="anchor anchorWithHideOnScrollNavbar_GLuy" id="aks-slb-공용-부하-분산-장치-사용">aks slb (공용 부하 분산 장치 사용)<a class="hash-link" href="#aks-slb-공용-부하-분산-장치-사용" title="제목으로 바로 가기">​</a></h2><p><code>공용 IP 주소</code> 의 기본 정보를 보니까 태그에 친절하게 k8s metadata 들어가있어서 쉽게 찾을 수 있었습니다.</p><details class="details_rxUF alert alert--info details_PYSW" data-collapsed="true"><summary>공용 IP 주소들 자세히 보기</summary><div><div class="collapsibleContent_oXwz"><p><img loading="lazy" src="/assets/images/3-fb86283497bf9581704dd1296e22524e.png" class="img_dxBE"></p><p><img loading="lazy" src="/assets/images/4-969e02171db65ab53e9c29e8e917358f.png" class="img_dxBE"></p><p><img loading="lazy" src="/assets/images/5-3d0bdbf77b3bcc05bc757c63bdf0658b.png" class="img_dxBE"></p><p><img loading="lazy" src="/assets/images/6-64c8313f6008913bfd3f5ce4a92209d8.png" class="img_dxBE"></p></div></div></details><p>type이 <code>aks-slb-managed-outbound-ip</code> 인 리소스이였는데 AKS 클러스터의 송신 트래픽을 허용하기 위한 공용 IP 인거 같습니다.</p><p>해당 부분에 대해서는 더 깊게 찾아보지 않아서 궁금하신 분들은 <a href="https://github.com/Azure/AKS/issues/1281#issuecomment-543867504" target="_blank" rel="noopener noreferrer">Undocumented public IP in AKS-provisioned load balancer</a> 를 읽어보시면 좋을 꺼 같습니다.</p><h2 class="anchor anchorWithHideOnScrollNavbar_GLuy" id="마무리">마무리<a class="hash-link" href="#마무리" title="제목으로 바로 가기">​</a></h2><p>k8s에서 IP를 필요로 할 때 Azure가 어떻게 핸들링 하는지 아주 간단하게 알 수 있었습니다.</p><p>각 클라우드 프로바이더마다 처리 방법이 다르겠지만 그래도 역시 기존에 있던 클라우드 자원을 잘 조립해서 처리하는 방향일 것 같습니다.</p><p>읽어주셔서 감사합니다 :)</p>]]></content>
        <category label="azure" term="azure"/>
        <category label="k8s" term="k8s"/>
        <category label="AKS" term="AKS"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[간단한 HTTP 캐시 서버를 만들어보자 (with golang)]]></title>
        <id>/2021/11/17/lets-create-an-http-cache-server-with-golang</id>
        <link href="https://parkgang.github.io/blog/2021/11/17/lets-create-an-http-cache-server-with-golang"/>
        <updated>2021-11-16T15:12:13.000Z</updated>
        <summary type="html"><![CDATA[HTTP Cache를 위한 Header 값 설명이 아닌 실제 Server 프로그램이 어떤 로직으로 처리가 되는지 설명합니다.]]></summary>
        <content type="html"><![CDATA[<p>HTTP Cache를 위한 Header 값 설명이 아닌 실제 Server 프로그램이 어떤 로직으로 처리가 되는지 설명합니다.</p><p>HTTP Cache에 대해서 찾아보면 대부분 각 Header가 어떻게 동작하는지에 대해 중점으로 알려줍니다.</p><p>어떻게 보면 Client와 Server가 HTTP Spec에 규정된 Header 값을 바탕으로 캐시하는 것이 전부이긴 하지만 Header 값을 실제 프로그램이 어떻게 읽어서 처리하느냐도 중요합니다.</p><p>필자는 HTTP Cache를 공부할 때 Header에 대한 내용만 나오고 그 Header를 어떤 로직으로 보내는지 서버는 Header를 읽어서 어떻게 하는지 로직적으로 살펴볼 수 없어서 이해가 너무 힘들었습니다.</p><p>특히, <code>ETag</code> 부분은 도데체 어떤 경우에 생기며 <code>ETag</code> 가 변경되는 기준은 무엇이며 검증은 어떤 식으로 하는지 너무 답답했습니다.</p><p>이에 따라 직접 캐시 서버를 만들어서 이해하기로 결심했고 <a href="https://www.sanarias.com/blog/115LearningHTTPcachinginGo" target="_blank" rel="noopener noreferrer">Learning HTTP caching in Go</a> 글을 기준으로 잡고 간단한 캐시 서버를 제작하게 되었습니다.</p><div class="admonition admonition-note alert alert--secondary"><div class="admonition-heading"><h5><span class="admonition-icon"><svg xmlns="http://www.w3.org/2000/svg" width="14" height="16" viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>note</h5></div><div class="admonition-content"><p>해당 글에서는 HTTP Cache와 관련된 Header에 대해서 자세히 설명하지 않으며 HTTP Cache와 관련된 Header가 어떻게 Request되고 Server는 어떤 식으로 처리되는지를 그에 대한 효율성을 중점적으로 서술합니다.</p></div></div><h2 class="anchor anchorWithHideOnScrollNavbar_GLuy" id="tldr">TL;DR<a class="hash-link" href="#tldr" title="제목으로 바로 가기">​</a></h2><ol><li>HTTP Cache Header는 HTTP로 통신하는 주체들이 캐시를 처리하기 위한 하나의 interface일 뿐 그것에 대한 처리 로직을 구현하는 것은 Client (browser) 와 Server (web server) 입니다.</li><li><code>Express.js</code> 니 <code>ASP.NET Core</code> 과 같은 상용화 된 웹 서버 제품을 사용하는 경우 캐시 관련 해더를 처리하는 부분은 블랙박스 영역이라고 생각하면 됩니다.</li></ol><h2 class="anchor anchorWithHideOnScrollNavbar_GLuy" id="요구사항">요구사항<a class="hash-link" href="#요구사항" title="제목으로 바로 가기">​</a></h2><ol><li>우선 캐시가 적용된 경우와 적용되지 않은 경우를 보기 쉽도록 이미지 파일을 읽어오는 API를 만들고 가장 궁금했던 <code>ETag</code> 처리 로직을 위해서 텍스트 파일을 읽어오는 API를 만들도록 합니다.</li><li>이미지 API의 경우 제일 단순하게 <code>Cache-Control</code> Header를 통해서 <code>max-age</code> 만을 가지고 캐시 적용 유무 차이를 볼 것이고</li><li>텍스트 API의 경우 파일이 수정될 때마다 <code>ETag</code> 값을 변경하여 Response 하는 로직과 함께 <code>Cache-Control</code> Header로 시간에 따른 캐시 변화도 볼 것입니다.</li></ol><h2 class="anchor anchorWithHideOnScrollNavbar_GLuy" id="코드를-보여주세요">코드를 보여주세요<a class="hash-link" href="#코드를-보여주세요" title="제목으로 바로 가기">​</a></h2><div class="admonition admonition-note alert alert--secondary"><div class="admonition-heading"><h5><span class="admonition-icon"><svg xmlns="http://www.w3.org/2000/svg" width="14" height="16" viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>note</h5></div><div class="admonition-content"><p>아래에 사용된 코드는 <a href="https://github.com/parkgang/http-cache-server-with-go" target="_blank" rel="noopener noreferrer">parkgang/http-cache-server-with-go</a> 에서 살펴보실 수 있습니다.</p></div></div><h3 class="anchor anchorWithHideOnScrollNavbar_GLuy" id="maingo">main.go<a class="hash-link" href="#maingo" title="제목으로 바로 가기">​</a></h3><ol><li>HTTP Cache를 이해하기 위한 간단한 서버라서 로직은 모두 <code>main.go</code> 에 몰아져있습니다.</li><li>endpoint는 <code>/image</code>, <code>/text</code> 2가지가 있고 위에서 말한 이미지와 텍스트를 조회하는 API 입니다.<ol><li>이미지의 경우 메모리 상에서 생성하고 응답할 것이며</li><li>텍스트의 경우 <code>assets</code> 디렉터리에 있는 <code>note.txt</code> 파일을 사용할 것입니다.</li></ol></li><li><code>Cache-Control</code> Header의 경우 이미지와 텍스트 모두 동일하게 <code>private, max-age=5</code> 가 적용됩니다.<ol><li>확실한 테스트를 위해 브라우저만 캐시되도록 <code>private</code> 을 지정하였고</li><li>캐시 적용 유무를 빠르게 보기 위하여 아주 짧은 시간인 <code>max-age</code> 를 5초로 지정하였습니다.</li></ol></li><li><code>ETag</code> 의 경우 만드는 방법이 여러가지 있는 것으로 알지만 가장 단순하게 파일이 수정된 일자를 MD5 해시 함수를 이용하여 생성하였습니다.<ol><li>이로써 파일이 수정될 때마다 (파일을 그냥 저장할 때도 해당) 수정된 일자가 변경되어서 <code>ETag</code> 가 계속 변하게 될 것입니다.</li></ol></li><li><code>r.Header.Get("If-None-Match")</code> 쪽 코드를 보면 <code>ETag</code> 를 검증하는 로직이 있는데 request header에 <code>If-None-Match</code> 값이 존재하고 request한 <code>ETag</code> 와 현재 파일의 <code>ETag</code> 를 구해서 비교 후 같으면 <code>304</code> 를 응답하는 코드입니다.<blockquote><p>물론 제품 수준의 퀄리티는 아니지만 메커니즘 이해를 위한 구현은 이렇게 쉬운데 이 부분이 블랙박스로 처리되어 참으로 이해가 어려웠습니다.</p></blockquote></li><li>또한, 각각의 API가 실제로 호출 여부를 확인하기 위해서 호출 시 응답 전에 console에 글자를 출력하도록 코딩되어 있습니다.</li></ol><div class="language-go codeBlockContainer_nXGu theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_SpHG">main.go</div><div class="codeBlockContent_JJ8q"><pre tabindex="0" class="prism-code language-go codeBlock_lX7H thin-scrollbar"><code class="codeBlockLines_pw4m"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">package</span><span class="token plain"> main</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string" style="color:#e3116c">"bytes"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string" style="color:#e3116c">"crypto/md5"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string" style="color:#e3116c">"flag"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string" style="color:#e3116c">"fmt"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string" style="color:#e3116c">"image"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string" style="color:#e3116c">"image/color"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string" style="color:#e3116c">"image/draw"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string" style="color:#e3116c">"image/jpeg"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string" style="color:#e3116c">"io/ioutil"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string" style="color:#e3116c">"log"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string" style="color:#e3116c">"net/http"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string" style="color:#e3116c">"os"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string" style="color:#e3116c">"strconv"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string" style="color:#e3116c">"strings"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> root </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> flag</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">String</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"root"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"./assets"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"file system path"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">main</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    http</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Handle</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"/"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> http</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">FileServer</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">http</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Dir</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">root</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    http</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">HandleFunc</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"/image"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> imageHandler</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    http</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">HandleFunc</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"/text"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> textHandler</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    log</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Println</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Listening on 8080"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> http</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">ListenAndServe</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">":8080"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        log</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Fatal</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"ListenAndServe:"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> err</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">imageHandler</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">w http</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ResponseWriter</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> r </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">http</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Request</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    m </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> image</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">NewRGBA</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">image</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Rect</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">240</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">240</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// 검은색 이미지 생성</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    tempImage </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> color</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">RGBA</span><span class="token punctuation" style="color:#393A34">{</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">255</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    draw</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Draw</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">m</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> m</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Bounds</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">image</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Uniform</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">tempImage</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> image</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Point</span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> draw</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Src</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// jpeg 형식으로 이미지를 인코딩하고 ResponseWriter에 writes 합니다.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> img image</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Image </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> m</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    buffer </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">new</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">bytes</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Buffer</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> jpeg</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Encode</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">buffer</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> img</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        log</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Println</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"unable to encode image."</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    log</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Println</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"이미지 응답"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">    w</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Header</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Set</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Cache-Control"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"private, max-age=5"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    w</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Header</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Set</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Content-Type"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"image/jpeg"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    w</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Header</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Set</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Content-Length"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> strconv</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Itoa</span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">len</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">buffer</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Bytes</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">_</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> w</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Write</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">buffer</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Bytes</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        log</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Println</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"unable to write image."</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">textHandler</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">w http</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ResponseWriter</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> r </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">http</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Request</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    filename </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"./assets/note.txt"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// 마지막 수정 시간 가져오기</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    file</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> os</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Stat</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">filename</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        log</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Println</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">err</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    modifiedtime </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> file</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">ModTime</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    etag </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> fmt</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Sprintf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"%x"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> md5</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Sum</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token function" style="color:#d73a49">byte</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">modifiedtime</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">String</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    w</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Header</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Set</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Etag"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> etag</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">    w</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Header</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Set</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Cache-Control"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"private, max-age=5"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// etag가 변하지 않았다면 304 응답</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> match </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> r</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Header</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"If-None-Match"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> match </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">""</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> strings</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Contains</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">match</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> etag</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">            log</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Println</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"etag가 변하지 않았음으로 304 응답"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">            w</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">WriteHeader</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">http</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">StatusNotModified</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// 파일을 읽은 후 응답</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    dat</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> ioutil</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">ReadFile</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">filename</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        log</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Println</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">err</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    log</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Println</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"파일 응답"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    fmt</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Fprint</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">w</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">string</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">dat</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup_rq_W"><button type="button" aria-label="클립보드에 코드 복사" title="복사" class="clean-btn"><span class="copyButtonIcons_gVBA" aria-hidden="true"><svg class="copyButtonIcon_Yh5B" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_vsWg" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithHideOnScrollNavbar_GLuy" id="assetsnotetxt">assets/note.txt<a class="hash-link" href="#assetsnotetxt" title="제목으로 바로 가기">​</a></h3><ol><li>텍스트 API에서 응답할 때 사용되는 텍스트 파일인데 일부로 <code>3MB</code> 으로 무겁개 해서 캐시 효과가 얼마나 큰지 알 수 있도록 디자인하였습니다.</li><li>또한, <code>304</code> 응답 시 얼마나 응답 바디가 작은지 확인할 수 있습니다.</li></ol><h3 class="anchor anchorWithHideOnScrollNavbar_GLuy" id="assetsindexhtml">assets/index.html<a class="hash-link" href="#assetsindexhtml" title="제목으로 바로 가기">​</a></h3><ol><li>Server API를 소비하는 Client 웹 페이지 입니다.</li><li><code>이미지 요청</code> 버튼을 누르면 이미지를 조회해서 보여주고</li><li><code>텍스트 요청</code> 버튼을 누르면 텍스트를 조회해서 보여주는 아주 간단한 웹 페이지 입니다.</li></ol><div class="admonition admonition-info alert alert--info"><div class="admonition-heading"><h5><span class="admonition-icon"><svg xmlns="http://www.w3.org/2000/svg" width="14" height="16" viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>info</h5></div><div class="admonition-content"><p>독자분들은 아시나요...? 정적 파일 요청을 브라우저의 URL에 직접 넣어서 요청하면 캐시 되지 않는다는 것을...🥲</p><p>분명 캐시가 적용된 URL인데 계속 요청을 해도 캐시되지 않고 새롭게 응답받길래 왜 그러지 하고 트러블 슈팅을 해보니 브라우저 URL에 직접 넣어서 호출해서 그렇더군요</p><p>그래서 아래와 같이 간단한 웹 페이지를 만들어서 호출할 수 있도록 디자인하였습니다.</p><p>에초에 GUI라서 확인하기도 쉬우실 꺼에요!</p></div></div><div class="language-html codeBlockContainer_nXGu theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_JJ8q"><pre tabindex="0" class="prism-code language-html codeBlock_lX7H thin-scrollbar"><code class="codeBlockLines_pw4m"><span class="token-line" style="color:#393A34"><span class="token doctype punctuation" style="color:#393A34;font-style:italic">&lt;!</span><span class="token doctype doctype-tag" style="color:#999988;font-style:italic">DOCTYPE</span><span class="token doctype" style="color:#999988;font-style:italic"> </span><span class="token doctype name" style="color:#999988;font-style:italic">html</span><span class="token doctype punctuation" style="color:#393A34;font-style:italic">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">html</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">lang</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">ko</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">head</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">meta</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">charset</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">UTF-8</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"> </span><span class="token tag punctuation" style="color:#393A34">/&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">meta</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">name</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">viewport</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">content</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">width=device-width, initial-scale=1.0</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"> </span><span class="token tag punctuation" style="color:#393A34">/&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">title</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain">Document</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">title</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">style</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token style language-css"></span><br></span><span class="token-line" style="color:#393A34"><span class="token style language-css">      </span><span class="token style language-css selector class" style="color:#00009f">.text-area</span><span class="token style language-css"> </span><span class="token style language-css punctuation" style="color:#393A34">{</span><span class="token style language-css"></span><br></span><span class="token-line" style="color:#393A34"><span class="token style language-css">        </span><span class="token style language-css property" style="color:#36acaa">display</span><span class="token style language-css punctuation" style="color:#393A34">:</span><span class="token style language-css"> inline-block</span><span class="token style language-css punctuation" style="color:#393A34">;</span><span class="token style language-css"></span><br></span><span class="token-line" style="color:#393A34"><span class="token style language-css">        </span><span class="token style language-css property" style="color:#36acaa">width</span><span class="token style language-css punctuation" style="color:#393A34">:</span><span class="token style language-css"> </span><span class="token style language-css number" style="color:#36acaa">240</span><span class="token style language-css unit">px</span><span class="token style language-css punctuation" style="color:#393A34">;</span><span class="token style language-css"></span><br></span><span class="token-line" style="color:#393A34"><span class="token style language-css">        </span><span class="token style language-css property" style="color:#36acaa">height</span><span class="token style language-css punctuation" style="color:#393A34">:</span><span class="token style language-css"> </span><span class="token style language-css number" style="color:#36acaa">240</span><span class="token style language-css unit">px</span><span class="token style language-css punctuation" style="color:#393A34">;</span><span class="token style language-css"></span><br></span><span class="token-line" style="color:#393A34"><span class="token style language-css">        </span><span class="token style language-css property" style="color:#36acaa">border</span><span class="token style language-css punctuation" style="color:#393A34">:</span><span class="token style language-css"> </span><span class="token style language-css number" style="color:#36acaa">1</span><span class="token style language-css unit">px</span><span class="token style language-css"> solid </span><span class="token style language-css color">black</span><span class="token style language-css punctuation" style="color:#393A34">;</span><span class="token style language-css"></span><br></span><span class="token-line" style="color:#393A34"><span class="token style language-css">        </span><span class="token style language-css property" style="color:#36acaa">overflow</span><span class="token style language-css punctuation" style="color:#393A34">:</span><span class="token style language-css"> hidden</span><span class="token style language-css punctuation" style="color:#393A34">;</span><span class="token style language-css"></span><br></span><span class="token-line" style="color:#393A34"><span class="token style language-css">      </span><span class="token style language-css punctuation" style="color:#393A34">}</span><span class="token style language-css"></span><br></span><span class="token-line" style="color:#393A34"><span class="token style language-css">    </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">style</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">head</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">body</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">div</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">button</span><span class="token tag" style="color:#00009f"> </span><span class="token tag special-attr attr-name" style="color:#00a4db">onclick</span><span class="token tag special-attr attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag special-attr attr-value punctuation" style="color:#393A34">"</span><span class="token tag special-attr attr-value value javascript language-javascript function" style="color:#d73a49">handleGetImage</span><span class="token tag special-attr attr-value value javascript language-javascript punctuation" style="color:#393A34">(</span><span class="token tag special-attr attr-value value javascript language-javascript punctuation" style="color:#393A34">)</span><span class="token tag special-attr attr-value punctuation" style="color:#393A34">"</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain">이미지 요청</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">button</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">br</span><span class="token tag" style="color:#00009f"> </span><span class="token tag punctuation" style="color:#393A34">/&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">img</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">id</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">image</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">src</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">alt</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">이미지가 표시 안됨</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"> </span><span class="token tag punctuation" style="color:#393A34">/&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">div</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">hr</span><span class="token tag" style="color:#00009f"> </span><span class="token tag punctuation" style="color:#393A34">/&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">div</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">button</span><span class="token tag" style="color:#00009f"> </span><span class="token tag special-attr attr-name" style="color:#00a4db">onclick</span><span class="token tag special-attr attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag special-attr attr-value punctuation" style="color:#393A34">"</span><span class="token tag special-attr attr-value value javascript language-javascript function" style="color:#d73a49">handleGetTxt</span><span class="token tag special-attr attr-value value javascript language-javascript punctuation" style="color:#393A34">(</span><span class="token tag special-attr attr-value value javascript language-javascript punctuation" style="color:#393A34">)</span><span class="token tag special-attr attr-value punctuation" style="color:#393A34">"</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain">텍스트 요청</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">button</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">br</span><span class="token tag" style="color:#00009f"> </span><span class="token tag punctuation" style="color:#393A34">/&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">span</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">class</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">text-area</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">span</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">div</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">body</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">script</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#393A34"><span class="token script language-javascript">    </span><span class="token script language-javascript keyword" style="color:#00009f">async</span><span class="token script language-javascript"> </span><span class="token script language-javascript keyword" style="color:#00009f">function</span><span class="token script language-javascript"> </span><span class="token script language-javascript function" style="color:#d73a49">handleGetImage</span><span class="token script language-javascript punctuation" style="color:#393A34">(</span><span class="token script language-javascript punctuation" style="color:#393A34">)</span><span class="token script language-javascript"> </span><span class="token script language-javascript punctuation" style="color:#393A34">{</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#393A34"><span class="token script language-javascript">      </span><span class="token script language-javascript keyword" style="color:#00009f">const</span><span class="token script language-javascript"> response </span><span class="token script language-javascript operator" style="color:#393A34">=</span><span class="token script language-javascript"> </span><span class="token script language-javascript keyword control-flow" style="color:#00009f">await</span><span class="token script language-javascript"> </span><span class="token script language-javascript function" style="color:#d73a49">fetch</span><span class="token script language-javascript punctuation" style="color:#393A34">(</span><span class="token script language-javascript template-string template-punctuation string" style="color:#e3116c">`</span><span class="token script language-javascript template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token script language-javascript template-string interpolation dom variable" style="color:#36acaa">window</span><span class="token script language-javascript template-string interpolation punctuation" style="color:#393A34">.</span><span class="token script language-javascript template-string interpolation property-access">location</span><span class="token script language-javascript template-string interpolation punctuation" style="color:#393A34">.</span><span class="token script language-javascript template-string interpolation property-access">origin</span><span class="token script language-javascript template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token script language-javascript template-string string" style="color:#e3116c">/image</span><span class="token script language-javascript template-string template-punctuation string" style="color:#e3116c">`</span><span class="token script language-javascript punctuation" style="color:#393A34">)</span><span class="token script language-javascript punctuation" style="color:#393A34">;</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#393A34"><span class="token script language-javascript">      </span><span class="token script language-javascript keyword control-flow" style="color:#00009f">if</span><span class="token script language-javascript"> </span><span class="token script language-javascript punctuation" style="color:#393A34">(</span><span class="token script language-javascript">response</span><span class="token script language-javascript punctuation" style="color:#393A34">.</span><span class="token script language-javascript property-access">ok</span><span class="token script language-javascript punctuation" style="color:#393A34">)</span><span class="token script language-javascript"> </span><span class="token script language-javascript punctuation" style="color:#393A34">{</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#393A34"><span class="token script language-javascript">        </span><span class="token script language-javascript keyword" style="color:#00009f">const</span><span class="token script language-javascript"> imageBlob </span><span class="token script language-javascript operator" style="color:#393A34">=</span><span class="token script language-javascript"> </span><span class="token script language-javascript keyword control-flow" style="color:#00009f">await</span><span class="token script language-javascript"> response</span><span class="token script language-javascript punctuation" style="color:#393A34">.</span><span class="token script language-javascript method function property-access" style="color:#d73a49">blob</span><span class="token script language-javascript punctuation" style="color:#393A34">(</span><span class="token script language-javascript punctuation" style="color:#393A34">)</span><span class="token script language-javascript punctuation" style="color:#393A34">;</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#393A34"><span class="token script language-javascript">        </span><span class="token script language-javascript keyword" style="color:#00009f">const</span><span class="token script language-javascript"> imageObjectURL </span><span class="token script language-javascript operator" style="color:#393A34">=</span><span class="token script language-javascript"> </span><span class="token script language-javascript constant" style="color:#36acaa">URL</span><span class="token script language-javascript punctuation" style="color:#393A34">.</span><span class="token script language-javascript method function property-access" style="color:#d73a49">createObjectURL</span><span class="token script language-javascript punctuation" style="color:#393A34">(</span><span class="token script language-javascript">imageBlob</span><span class="token script language-javascript punctuation" style="color:#393A34">)</span><span class="token script language-javascript punctuation" style="color:#393A34">;</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#393A34"><span class="token script language-javascript">        </span><span class="token script language-javascript dom variable" style="color:#36acaa">document</span><span class="token script language-javascript punctuation" style="color:#393A34">.</span><span class="token script language-javascript method function property-access" style="color:#d73a49">getElementById</span><span class="token script language-javascript punctuation" style="color:#393A34">(</span><span class="token script language-javascript string" style="color:#e3116c">"image"</span><span class="token script language-javascript punctuation" style="color:#393A34">)</span><span class="token script language-javascript punctuation" style="color:#393A34">.</span><span class="token script language-javascript property-access">src</span><span class="token script language-javascript"> </span><span class="token script language-javascript operator" style="color:#393A34">=</span><span class="token script language-javascript"> imageObjectURL</span><span class="token script language-javascript punctuation" style="color:#393A34">;</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#393A34"><span class="token script language-javascript">      </span><span class="token script language-javascript punctuation" style="color:#393A34">}</span><span class="token script language-javascript"> </span><span class="token script language-javascript keyword control-flow" style="color:#00009f">else</span><span class="token script language-javascript"> </span><span class="token script language-javascript punctuation" style="color:#393A34">{</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#393A34"><span class="token script language-javascript">        </span><span class="token script language-javascript function" style="color:#d73a49">alert</span><span class="token script language-javascript punctuation" style="color:#393A34">(</span><span class="token script language-javascript string" style="color:#e3116c">"HTTP-Error: "</span><span class="token script language-javascript"> </span><span class="token script language-javascript operator" style="color:#393A34">+</span><span class="token script language-javascript"> response</span><span class="token script language-javascript punctuation" style="color:#393A34">.</span><span class="token script language-javascript property-access">status</span><span class="token script language-javascript punctuation" style="color:#393A34">)</span><span class="token script language-javascript punctuation" style="color:#393A34">;</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#393A34"><span class="token script language-javascript">      </span><span class="token script language-javascript punctuation" style="color:#393A34">}</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#393A34"><span class="token script language-javascript">    </span><span class="token script language-javascript punctuation" style="color:#393A34">}</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#393A34"><span class="token script language-javascript">    </span><span class="token script language-javascript keyword" style="color:#00009f">async</span><span class="token script language-javascript"> </span><span class="token script language-javascript keyword" style="color:#00009f">function</span><span class="token script language-javascript"> </span><span class="token script language-javascript function" style="color:#d73a49">handleGetTxt</span><span class="token script language-javascript punctuation" style="color:#393A34">(</span><span class="token script language-javascript punctuation" style="color:#393A34">)</span><span class="token script language-javascript"> </span><span class="token script language-javascript punctuation" style="color:#393A34">{</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#393A34"><span class="token script language-javascript">      </span><span class="token script language-javascript keyword" style="color:#00009f">const</span><span class="token script language-javascript"> response </span><span class="token script language-javascript operator" style="color:#393A34">=</span><span class="token script language-javascript"> </span><span class="token script language-javascript keyword control-flow" style="color:#00009f">await</span><span class="token script language-javascript"> </span><span class="token script language-javascript function" style="color:#d73a49">fetch</span><span class="token script language-javascript punctuation" style="color:#393A34">(</span><span class="token script language-javascript template-string template-punctuation string" style="color:#e3116c">`</span><span class="token script language-javascript template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token script language-javascript template-string interpolation dom variable" style="color:#36acaa">window</span><span class="token script language-javascript template-string interpolation punctuation" style="color:#393A34">.</span><span class="token script language-javascript template-string interpolation property-access">location</span><span class="token script language-javascript template-string interpolation punctuation" style="color:#393A34">.</span><span class="token script language-javascript template-string interpolation property-access">origin</span><span class="token script language-javascript template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token script language-javascript template-string string" style="color:#e3116c">/text</span><span class="token script language-javascript template-string template-punctuation string" style="color:#e3116c">`</span><span class="token script language-javascript punctuation" style="color:#393A34">)</span><span class="token script language-javascript punctuation" style="color:#393A34">;</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#393A34"><span class="token script language-javascript">      </span><span class="token script language-javascript keyword control-flow" style="color:#00009f">if</span><span class="token script language-javascript"> </span><span class="token script language-javascript punctuation" style="color:#393A34">(</span><span class="token script language-javascript">response</span><span class="token script language-javascript punctuation" style="color:#393A34">.</span><span class="token script language-javascript property-access">ok</span><span class="token script language-javascript punctuation" style="color:#393A34">)</span><span class="token script language-javascript"> </span><span class="token script language-javascript punctuation" style="color:#393A34">{</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#393A34"><span class="token script language-javascript">        </span><span class="token script language-javascript keyword" style="color:#00009f">const</span><span class="token script language-javascript"> text </span><span class="token script language-javascript operator" style="color:#393A34">=</span><span class="token script language-javascript"> </span><span class="token script language-javascript keyword control-flow" style="color:#00009f">await</span><span class="token script language-javascript"> response</span><span class="token script language-javascript punctuation" style="color:#393A34">.</span><span class="token script language-javascript method function property-access" style="color:#d73a49">text</span><span class="token script language-javascript punctuation" style="color:#393A34">(</span><span class="token script language-javascript punctuation" style="color:#393A34">)</span><span class="token script language-javascript punctuation" style="color:#393A34">;</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#393A34"><span class="token script language-javascript">        </span><span class="token script language-javascript dom variable" style="color:#36acaa">document</span><span class="token script language-javascript punctuation" style="color:#393A34">.</span><span class="token script language-javascript method function property-access" style="color:#d73a49">getElementsByClassName</span><span class="token script language-javascript punctuation" style="color:#393A34">(</span><span class="token script language-javascript string" style="color:#e3116c">"text-area"</span><span class="token script language-javascript punctuation" style="color:#393A34">)</span><span class="token script language-javascript punctuation" style="color:#393A34">[</span><span class="token script language-javascript number" style="color:#36acaa">0</span><span class="token script language-javascript punctuation" style="color:#393A34">]</span><span class="token script language-javascript punctuation" style="color:#393A34">.</span><span class="token script language-javascript property-access">innerHTML</span><span class="token script language-javascript"> </span><span class="token script language-javascript operator" style="color:#393A34">=</span><span class="token script language-javascript"> text</span><span class="token script language-javascript punctuation" style="color:#393A34">;</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#393A34"><span class="token script language-javascript">      </span><span class="token script language-javascript punctuation" style="color:#393A34">}</span><span class="token script language-javascript"> </span><span class="token script language-javascript keyword control-flow" style="color:#00009f">else</span><span class="token script language-javascript"> </span><span class="token script language-javascript punctuation" style="color:#393A34">{</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#393A34"><span class="token script language-javascript">        </span><span class="token script language-javascript function" style="color:#d73a49">alert</span><span class="token script language-javascript punctuation" style="color:#393A34">(</span><span class="token script language-javascript string" style="color:#e3116c">"HTTP-Error: "</span><span class="token script language-javascript"> </span><span class="token script language-javascript operator" style="color:#393A34">+</span><span class="token script language-javascript"> response</span><span class="token script language-javascript punctuation" style="color:#393A34">.</span><span class="token script language-javascript property-access">status</span><span class="token script language-javascript punctuation" style="color:#393A34">)</span><span class="token script language-javascript punctuation" style="color:#393A34">;</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#393A34"><span class="token script language-javascript">      </span><span class="token script language-javascript punctuation" style="color:#393A34">}</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#393A34"><span class="token script language-javascript">    </span><span class="token script language-javascript punctuation" style="color:#393A34">}</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#393A34"><span class="token script language-javascript">  </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">script</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">html</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><br></span></code></pre><div class="buttonGroup_rq_W"><button type="button" aria-label="클립보드에 코드 복사" title="복사" class="clean-btn"><span class="copyButtonIcons_gVBA" aria-hidden="true"><svg class="copyButtonIcon_Yh5B" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_vsWg" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithHideOnScrollNavbar_GLuy" id="원하는-대로-동작하는지-확인해보자">원하는 대로 동작하는지 확인해보자<a class="hash-link" href="#원하는-대로-동작하는지-확인해보자" title="제목으로 바로 가기">​</a></h2><h3 class="anchor anchorWithHideOnScrollNavbar_GLuy" id="서버-실행">서버 실행<a class="hash-link" href="#서버-실행" title="제목으로 바로 가기">​</a></h3><ol><li>자 이제 캐시가 잘 되는지 확인해볼까요? 위에서 말한 repo에서 소스코드를 clone 받고 <code>go run main.go</code> 으로 서버를 시작해 봅시다.</li><li>캐시 여부를 편리하기 보기위해서 저는 친숙한 <code>Chrome</code> 을 사용하도록 하겠습니다.<blockquote><p>대부분 비슷하긴 하지만 <code>Chrome</code> 이 아니여도 디버깅이 편하신 분은 다른 브라우저를 사용하셔도 됩니다.</p></blockquote></li><li>그리고 <a href="http://localhost:8080" target="_blank" rel="noopener noreferrer">http://localhost:8080</a> 주소로 접속하고 개발자 도구를 켜주세요! 아마 아래와 같이 화면이 될 것 입니다.
<img loading="lazy" src="/assets/images/1-7389d5c0d50cb1c98b867367747fe403.png" class="img_dxBE"></li></ol><h3 class="anchor anchorWithHideOnScrollNavbar_GLuy" id="이미지-캐시-확인">이미지 캐시 확인<a class="hash-link" href="#이미지-캐시-확인" title="제목으로 바로 가기">​</a></h3><p>우선 <code>이미지 요청</code> 버튼을 클릭해 볼까요?</p><p><img loading="lazy" src="/assets/images/2-a9efc978a568e9c8f46f514a9a039e7e.png" class="img_dxBE"></p><p>위와 같이 요청 후 서버에서 응답된 것을 확인할 수 있네요 응답 받은 이미지 용량은 <code>1.6kB</code> 이라고 하네요! 그럼 바로 한번 더 빠르게 <code>이미지 요청</code> 버튼을 클릭해 볼까요?</p><p><img loading="lazy" src="/assets/images/3-7f72c415d364453b35a5271e410724a1.png" class="img_dxBE"></p><p>이번에는 뭔가 요청이 된거 같으나 응답 부분의 용량이 <code>(디스크 캐시)</code> 인 것을 확인할 수 있습니다. 네, 그렇습니다 캐시되서 그렇습니다. 🤭 네트워크 요청 내역을 자세히 봐볼까요?</p><p><img loading="lazy" src="/assets/images/4-410faf5404107f566ac734128b8d6897.png" class="img_dxBE"></p><p>응답 header에 <code>Cache-Control: private, max-age=5</code> 가 존재하는 것을 볼 수 있습니다. 이미지 조회 API에 넣어 둔 header인 것을 알 수 있습니다. 앞으로 5초 동안은 해당 URL 요청에 대해서 Server에 물어보지 않고 브라우저 캐시를 사용합니다.</p><p>중요한 것은 네트워크 탭에는 <strong>마치 요청된 것</strong> 같아 보이지만 실제로는 <strong>Server에 요청하지 않는</strong> 다는 것 입니다.</p><p><img loading="lazy" src="/assets/images/5-e1bf6d8c823b0c613bdb891f66e8a306.png" class="img_dxBE"></p><p>Server Console을 보니까 요청이 1회 들어온 것을 확인할 수 있습니다.</p><div class="admonition admonition-note alert alert--secondary"><div class="admonition-heading"><h5><span class="admonition-icon"><svg xmlns="http://www.w3.org/2000/svg" width="14" height="16" viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>note</h5></div><div class="admonition-content"><p>앗, 혹시라도 1회 이상 요청되었나요? 그렇다면 2가지를 의심하셔야 합니다.</p><p>첫번째로 브라우저 개발자 도구에 <code>캐시 사용 중지</code> 체크 박스가 해재되어있는지 확인해주세요. 해당 체크박스가 체크되어 있으면 캐시되지 않습니다ㅠㅠ</p><p>두번째로 <code>max-age</code> 값을 올리시거나 아니면 더 빨리 버튼을 클릭해 보세요 빠른 테스트를 위해서 캐시 시간을 5초로 지정하였는데 5초가 지나면 해당 URL의 캐시는 무효화 되어 Server에게 다시 요청을 보내게 됩니다. 해당 경우가 아닌지 한번 확인해보세요</p></div></div><p>이외 아래의 RGBA 값과 <code>max-age</code> 값을 바꾸면서 테스트 해보세요. 첫 조회된 <code>max-age</code> 시간 동안은 색상 값을 변경하더라도 조회되지 않지만 <code>max-age</code> 가 지나면 변경되는 것을 확인할 수 있습니다.</p><div class="language-go codeBlockContainer_nXGu theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_SpHG">main.go</div><div class="codeBlockContent_JJ8q"><pre tabindex="0" class="prism-code language-go codeBlock_lX7H thin-scrollbar"><code class="codeBlockLines_pw4m"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">imageHandler</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">w http</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ResponseWriter</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> r </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">http</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Request</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// 검은색 이미지 생성</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">    tempImage </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> color</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">RGBA</span><span class="token punctuation" style="color:#393A34">{</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">255</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">...</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">    w</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Header</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Set</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Cache-Control"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"private, max-age=5"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup_rq_W"><button type="button" aria-label="클립보드에 코드 복사" title="복사" class="clean-btn"><span class="copyButtonIcons_gVBA" aria-hidden="true"><svg class="copyButtonIcon_Yh5B" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_vsWg" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithHideOnScrollNavbar_GLuy" id="텍스트-캐시-확인">텍스트 캐시 확인<a class="hash-link" href="#텍스트-캐시-확인" title="제목으로 바로 가기">​</a></h3><div class="admonition admonition-caution alert alert--warning"><div class="admonition-heading"><h5><span class="admonition-icon"><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16"><path fill-rule="evenodd" d="M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"></path></svg></span>caution</h5></div><div class="admonition-content"><p>텍스트 확인 전 혹시 모르니까 캐시를 모두 날리면서 테스트 하세요. 개발자 도구를 활성화한 상태에서 새로고침 버튼에서 오른쪽 마우스를 클릭하면 아래와 같이 강력 세로고침 매뉴을 볼 수 있습니다.</p><p><img loading="lazy" src="/assets/images/6-f3c496a1f900f4dd53c6be46ddb0d79a.png" class="img_dxBE"></p></div></div><p>자 이제 <code>Etag</code> 가 있는 텍스트 입니다. <code>텍스트 요청</code> 버튼을 클릭해 볼까요?</p><p><img loading="lazy" src="/assets/images/7-35ac0e2ff72822d6d5774c3b400d09f3.png" class="img_dxBE"></p><p>위와 같이 <code>3.1MB</code> 으로 묵직한 텍스트가 응답되었습니다. 매 요청마다 <code>3.1MB</code> 을 다운로드 하면 모바일 환경에서 데이터는 남아나지 않을 것 입니다. 바로 또 다시 <code>텍스트 요청</code> 버튼을 클릭해 볼까요?</p><p><img loading="lazy" src="/assets/images/8-b30f855fefe36609fe254ebd3d457e52.png" class="img_dxBE"></p><p>텍스트 파일도 이미지 파일과 동일하게 <code>Cache-Control: private, max-age=5</code> 가 설정되어 있기 때문에 5초 동안 캐시되어 있는 것을 확인할 수 있습니다. 그럼 이번에는 5초 기달렸다가 요청을 보내볼 까요?</p><p><img loading="lazy" src="/assets/images/9-5977ec6ff17d9a823ce556ba2369a945.png" class="img_dxBE"></p><p>이번에는 <code>141B</code> 로 매우 가벼운 응답이 온 것을 확인할 수 있습니다.</p><p>이유는 파일이 변경되지 않았기 때문에 Server에서 <code>ETag</code> 가 변경되지 않아 이전과 <code>ETag</code> 가 동일하기 때문에 <code>304</code> 를 응답하기 때문입니다.</p><p>덕분에 캐시가 끝나서 다시 <code>3.1MB</code> 응답받을 뻔! 했지만? Server에서 변경되지 않았다고 <code>304</code> 상태 코드와 <code>ETag</code> 를 header 응답해줘서 5초 동안은 캐시될 수 있도록 생명연장이 되었습니다. 😤 😮‍💨</p><p>그러면 궁금한 것이 이전 <code>ETag</code> 를 Server는 어떻게 알고 있는 걸까요?</p><p><img loading="lazy" src="/assets/images/10-9b3ade8f0de811ce50ad4b7f117304b3.png" class="img_dxBE"></p><p>진실은 Client (브라우저) 가 알아서 포함해서 보내기 때문입니다.</p><p>텍스트도 이미지와 같이 <code>max-age</code> 값을 바꾸거나 텍스트 파일을 수정해보면서 어떤 식으로 돌아가는지 확인해보세요. <code>ETag</code> 가 없을 때 캐시가 만료되면 어떻게 동작하는지 직접 확인하면 이해가 빠를 것 입니다.</p><h2 class="anchor anchorWithHideOnScrollNavbar_GLuy" id="마무리">마무리<a class="hash-link" href="#마무리" title="제목으로 바로 가기">​</a></h2><p>만들고나니 엄청나게 특별한 로직이 존재하지는 않았습니다. 그래도 실제로 캐시 유무에 따른 변화와 함께 상용으로 사용되는 웹 서버도 이와 비슷한 메커니즘으로 처리되겠구나 하는 것을 인지할 수 있었습니다.</p><p>덕분에 앞으로 웹 앱을 배포하고 무작정 캐시 문제라고 생각할 것이 아니라 논리적으로 트러블 슈팅을 할 수 있는 귀중한 경험치가 될 거 같습니다.</p><p>저와 같이 블랙박스 영역의 웹 서버 로직이 궁금하셨을 분들에게 조금이라도 도움이 됬으면 하며 저는 이만 물러가도록 하겠습니다. 읽어주셔서 감사합니다. 😀</p>]]></content>
        <category label="golang" term="golang"/>
        <category label="HTTP" term="HTTP"/>
        <category label="cache" term="cache"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[gin과 함께하는 react boilerplate를 공유합니다]]></title>
        <id>/2021/09/13/share-react-boilerplate-with-gin</id>
        <link href="https://parkgang.github.io/blog/2021/09/13/share-react-boilerplate-with-gin"/>
        <updated>2021-09-13T04:09:19.000Z</updated>
        <summary type="html"><![CDATA[Gin 을 사용하면서 손쉽게 config 변경도 가능하고 CRA 를 사용할 수 있는 boilerplate가 어디 없나? 그래서 만들어봤습니다.]]></summary>
        <content type="html"><![CDATA[<p><code>Gin</code> 을 사용하면서 손쉽게 config 변경도 가능하고 <code>CRA</code> 를 사용할 수 있는 boilerplate가 어디 없나? 그래서 만들어봤습니다.</p><h2 class="anchor anchorWithHideOnScrollNavbar_GLuy" id="tldr">TL;DR<a class="hash-link" href="#tldr" title="제목으로 바로 가기">​</a></h2><ol><li>gin + react boilerplate 이며 <a href="https://github.com/parkgang/react-with-gin-boilerplate" target="_blank" rel="noopener noreferrer">parkgang/react-with-gin-boilerplate</a> 에서 살펴보실 수 있습니다.</li><li>prod 환경도 json 가져와서 사용하는데 이는 보안에 위험할 수 있으니 기호에 맞게 수정해서 사용해주세요.<blockquote><p>예를 들어 환경변수로 바꾸기</p></blockquote></li></ol><h2 class="anchor anchorWithHideOnScrollNavbar_GLuy" id="왜-만든건가요">왜 만든건가요?<a class="hash-link" href="#왜-만든건가요" title="제목으로 바로 가기">​</a></h2><p>그동안 golang으로 그렇다 할만한 제품이 없어서 개인 프로젝트로 제품을 하나 제작해보려고 했습니다.</p><p>여러 golang의 웹 프레임워크 중 이전부터 많이 찾아보기도 헀고 지켜보고 있던 <code>gin</code> 으로 정하고 개발을 하려고 딱 준비를 했더니 신기한 점을 발견할 수 있었습니다.</p><p>뭐 라이브러리나 프레임워크가 얼마나 제공해주느냐에 따라 다르겠지만 기본적으로 개발 환경에 맞는 <code>config</code> 값을 주입받을 수 있는 기능과 같이 기본적인 기능이 <code>gin</code> 에 있을 줄 알았지만 없었습니다.</p><p>물론 <code>gin</code> 자체가 마이크로 웹 프레임워크 이므로 웹 프레임워크게 딱 필요한 기능있는 것이 맞습니다.</p><p>하지만 결국에 제품 개발을 하면서 환경분리 라던지~ 문서화 도구라던지~ 웹 프레임워크에 점점 살이 붙어져 나갈 텐데 이걸 일일이 프로젝트 마다 셋팅하는 것은 비효율적이라고 생각했습니다.</p><p>더구나 필자는 최근에 Server Side는 <code>ASP.NET Core</code> Client Side는 <code>CRA</code> 을 주로 개발해 왔었고 이외도 Server Side는 <code>express.js</code>, <code>nest.js</code> Client Side는 <code>next.js</code> 으로도 간단하게나 개발 경험이 있었는데 <code>ASP.NET Core</code> 같은 것만을 봐도 없는 기능이 무엇인 가 싶을정도로 많은 것을 지원합니다.</p><blockquote><p>특히 <code>config</code> 부분을 기본적으로 제공하는 기능이 마음에 들었습니다.</p></blockquote><blockquote><p>너무 익숙함에 속아서 그런지 <code>gin</code> 에 살짝 당황했었던... 🥲</p></blockquote><p>그래서 이참에 높은 이해도를 가지고 프로젝트를 시작하고 싶어 <code>gin</code> 에다가 <code>cra</code> 환경의 react를 사용하는 boilerplate를 만들기로 결심했고 미숙하지만 만들어진 결과물을 공유하려고 합니다.</p><h2 class="anchor anchorWithHideOnScrollNavbar_GLuy" id="어떤-것을-중점으로-만들-것인가">어떤 것을 중점으로 만들 것인가?<a class="hash-link" href="#어떤-것을-중점으로-만들-것인가" title="제목으로 바로 가기">​</a></h2><p>당연히 기본은 gin server에서 react app 개발이 잘 이뤄지는 것이지만 그래도 저는 프로젝트 스트럭처에 관심많고 명확하고 깔끔 하이어라키를 디자인하고 싶어서 당연한 기본적인 목표 이외 아래의 목표를 추가로 설정하였습니다.</p><h3 class="anchor anchorWithHideOnScrollNavbar_GLuy" id="엄격한-타입-정의">엄격한 타입 정의<a class="hash-link" href="#엄격한-타입-정의" title="제목으로 바로 가기">​</a></h3><p>ts의 유틸리티 타입을 적극 사용해서 우아한 타입을 선언</p><h3 class="anchor anchorWithHideOnScrollNavbar_GLuy" id="모호한-문법말고-명확하고-일관성-있게">모호한 문법말고 명확하고 일관성 있게<a class="hash-link" href="#모호한-문법말고-명확하고-일관성-있게" title="제목으로 바로 가기">​</a></h3><p>특히 js/ts에서 이런 고민이 많이 발생하는데 예를 들어 어떤 경우에 익명함수를 사용할지 화살표 함수를 사용할 지, 모듈에서 <code>default</code> 으로 export 되는 친구는 변수명 바로 옆에 <code>export default</code> 으로 선언해줄지 해당 파일의 가장 마지막 줄에 선언할 지, 컴포넌트마다 디렉터리를 만들어서 <code>index.ts</code> 으로 export 해주는 전략을 사용할지 등 꽤나 고민되는 요소가 많이 있습니다.</p><p>필자는 이런 부분의 규칙을 만드는 것에 매우 관심이 많음으로 이 부분을 감안하여 일관성있는 boilerplate를 만들고 싶었습니다.</p><h3 class="anchor anchorWithHideOnScrollNavbar_GLuy" id="server-side-api-문서화-및-http-status-code-명확하게-디자인">Server Side API 문서화 및 Http Status Code 명확하게 디자인<a class="hash-link" href="#server-side-api-문서화-및-http-status-code-명확하게-디자인" title="제목으로 바로 가기">​</a></h3><p>요청 성공하면 대충 <code>200</code> 으로 response 하는 것이 아닌 각각의 요청 처리에 맞는 Http Status Code 적절히 사용하고 싶었습니다.</p><h3 class="anchor anchorWithHideOnScrollNavbar_GLuy" id="recoil-react-query를-이용하여-react-명확하게-상태관리하기">recoil, react-query를 이용하여 react 명확하게 상태관리하기<a class="hash-link" href="#recoil-react-query를-이용하여-react-명확하게-상태관리하기" title="제목으로 바로 가기">​</a></h3><p><code>recoil</code> 과 <code>react-query</code> 모두 아주 대중적으로 사용되는 라이브러리 아닙니다.</p><blockquote><p>물론 <code>redux</code>, <code>context api</code> 친구와 비교한다면 이며 기준은 상대적입니다.</p></blockquote><p>필자는 해당 라이브러리를 너무 좋아한다 그래서 이번 boilerplate에 예제 코드를 넣어서 혹시라도 다른 분들께 insight를 전달할 수 있지 아늘까라는 기대로 넣으려고 했습니다.</p><h3 class="anchor anchorWithHideOnScrollNavbar_GLuy" id="예외처리">예외처리<a class="hash-link" href="#예외처리" title="제목으로 바로 가기">​</a></h3><p>제품 레벨으로써는 너무나도 당연한 것이지만 boilerplate으로 써 앱이 돌아갈 수 있는 환경까지 이면 되는데 여기에 예외처리까지 잘된 코드를 넣고 싶었습니다.</p><blockquote><p>문서화는 덤 ✌️</p></blockquote><h3 class="anchor anchorWithHideOnScrollNavbar_GLuy" id="microsoft-teams-ui-component">Microsoft Teams UI Component<a class="hash-link" href="#microsoft-teams-ui-component" title="제목으로 바로 가기">​</a></h3><p>react에 많은 component framework가 있지만 그 중에서도 아주 외소한 <code>@fluentui/react-northstar</code> 를 사용해서 Teams 룩앤필이 된 예제코드를 넣고 싶었습니다.</p><p>직장내에서 매신저 앱으로 slack 혹은 teams 혹은 회사마다 다른 사내매신저를 사용하실 텐데 teams를 사용하시는 곳이라면 해당 boilerplate를 보고 오 teams app이다 라는 반가움을 전달하고 싶었습니다.</p><h3 class="anchor anchorWithHideOnScrollNavbar_GLuy" id="디버깅-환경">디버깅 환경<a class="hash-link" href="#디버깅-환경" title="제목으로 바로 가기">​</a></h3><p>프로젝트는 쉽게 실행되어 디버깅에 불편함이 없어야 개발하면서 계속 즐거움이 유지된다고 생각합니다. 이를 꼭 만족시키기 위해 좋은 디버깅 설정 rnd 했습니다.</p><h2 class="anchor anchorWithHideOnScrollNavbar_GLuy" id="제작-완료-회고-및-마무리">제작 완료 회고 및 마무리<a class="hash-link" href="#제작-완료-회고-및-마무리" title="제목으로 바로 가기">​</a></h2><p>이렇게 위와 같은 목표로 boilerplate가 완성되었습니다.</p><p><a href="https://github.com/parkgang/react-with-gin-boilerplate" target="_blank" rel="noopener noreferrer">parkgang/react-with-gin-boilerplate</a> 에서 만나보실 수 있으며 기존 예제 코드가 마음에 안드는 경우</p><blockquote><p>예를 들어 mysql을 사용하지 않는 다거나 그냥 바닐라 cra을 원하는 경우</p></blockquote><p>기호에 맞게 수정해서 사용하시면 됩니다.</p><p>이외 개발하면서 생각보다 많은 지식을 필요로 하는 부분은 SPA 이였습니다. 번들링된 정적파일 서빙 부터 CSR Router까지 Front End의 기본을 잘 이해하고 접근해야하는 부분이였는데 상당히 재미있었습니다.</p><p>끝으로 부족한 실력으로 boilerplate를 만들어 보았는데 사용하시는 분이 계실지 모르겠네요. 혹시라도 사용하시게 된다면 티를 내주시면 감사하겠습니다! 그러면 많은 동기부여가 될꺼 같아요! 읽어주셔서 감사합니다.</p>]]></content>
        <category label="promotion" term="promotion"/>
        <category label="boilerplate" term="boilerplate"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[next.js의 SSG 제대로 이해하고 사용하기]]></title>
        <id>/2021/09/07/lets-properly-understand-and-use-the-ssg-of-nextjs</id>
        <link href="https://parkgang.github.io/blog/2021/09/07/lets-properly-understand-and-use-the-ssg-of-nextjs"/>
        <updated>2021-09-06T15:09:55.000Z</updated>
        <summary type="html"><![CDATA[next.js의 장점 중 하나로 SSR 을 지원하는 것 인데 어떻게 전역 상태를 가지고 있는 걸까? PHP, JSP와 같은 SSR과 다른 걸까?]]></summary>
        <content type="html"><![CDATA[<p>next.js의 장점 중 하나로 <code>SSR</code> 을 지원하는 것 인데 어떻게 전역 상태를 가지고 있는 걸까? PHP, JSP와 같은 SSR과 다른 걸까?</p><p>내가 아는 SSR은 Server Side에서 각 페이지 별로 html을 생성해서 Response (혹은 파일 서빙) 을 해주는 것인데 next.js를 공부하고 사용해보면서 이부분에서 아직 찝찝한 부분이 있어서 next.js도 그렇게 동작하는게 맞는가? 에 대한 의문이 항상있었습니다.</p><blockquote><p>물론 SSR 단어 뜻 그대로 서버 측에서 렌더링 한다라는 뜻을 의미하지만 필자는 계속 JSP 같은 전통적인 SSR와 엄청 햇갈렸습니다.</p></blockquote><p>그동안 CRA 환경 즉, SPA에서 개발을 하고 있었는데 갑자기 next.js의 원리에 대해 궁금해서 이참에 다시 정리를 해보면서 얻은 경험치에 대해 공유해보려고 합니다.</p><p>그럼 SPA를 가공할 수 있는 여러 형태라고 할 수 있는 CSR, SSG, SSR를 비교하면서 설명해보도록 하겠습니다.</p><div class="admonition admonition-note alert alert--secondary"><div class="admonition-heading"><h5><span class="admonition-icon"><svg xmlns="http://www.w3.org/2000/svg" width="14" height="16" viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>note</h5></div><div class="admonition-content"><p>추가적으로 해당 글에서는 SPA, CSR, SSG, SSR과 같은 단어 설명과 next.js에 대한 설명을 포함하고 있지 않습니다.</p></div></div><h3 class="anchor anchorWithHideOnScrollNavbar_GLuy" id="tldr">TL;DR<a class="hash-link" href="#tldr" title="제목으로 바로 가기">​</a></h3><ol><li>next.js에서 말하는 SSR도 사실 하나 뿐인 SPA으로 동작합니다.</li><li>다만, empty html의 SPA 형태가 아닌 Server Side에서 미리 가공된 html을 가지고 SPA으로 동작합니다.</li></ol><h2 class="anchor anchorWithHideOnScrollNavbar_GLuy" id="내가-알고-있던-ssr은">내가 알고 있던 SSR은?<a class="hash-link" href="#내가-알고-있던-ssr은" title="제목으로 바로 가기">​</a></h2><p>필자는 SSR를 들었을 때 가장 처음으로 떠오른 것은 jsp 이였습니다.</p><p>Client가 요청한 페이지를 Server Side에서 열심히 가공해서 Response 하는 것을 말이죠</p><p>이는 주로 SSR를 설명할 때 가장 많이 소개되는 시나리오로 다른 페이지로 넘어갈 때 페이지의 내용을 새로 가공해서 넘겨주기 때문에 <strong>화면이 깜빡</strong> 한다 라고 하는 그 메커니즘을 가진 친구입니다.</p><p>근데 next.js 해보면 SSR임에 불구하고 아주 부드럽게 CSR처럼 화면 전환이 이뤄지는 것을 볼 수 있습니다.</p><blockquote><q>어라...? 내가 뭔가 잘못 이해했구나...</q></blockquote><h3 class="anchor anchorWithHideOnScrollNavbar_GLuy" id="그런데-어떻게-전역-상태가-관리되는-거지">그런데 어떻게 전역 상태가 관리되는 거지?<a class="hash-link" href="#그런데-어떻게-전역-상태가-관리되는-거지" title="제목으로 바로 가기">​</a></h3><p>이뿐만이 아니라 위에 내가 알고 있는 SSR을 대입하면 전역 상태는 어떻게 관리되는 건지 의문이 생깁니다.</p><p>이동하는 매 페이지는 다른 html인데 전역 상태가 불가능 할 것입니다.<br>
<!-- -->하지만 next.js는 SSR임에 불구하고 잘 처리됩니다.</p><p>사실 next.js only SSR이 아닌 CSR과 SSR의 장점을 섞은 방식인 것을 알 수 있습니다.<br>
<!-- -->그럼에도 불구하고 SSR 단어는 계속 이전 개념과 충돌하게 되었습니다.</p><p>혹시라도 저와 같으신 분이 있다면 해당 글로 이해가 풀리셨으면 좋겠습니다.</p><h2 class="anchor anchorWithHideOnScrollNavbar_GLuy" id="그럼-nextjs의-ssr은-어떻게-작동하는거야">그럼 next.js의 SSR은 어떻게 작동하는거야?<a class="hash-link" href="#그럼-nextjs의-ssr은-어떻게-작동하는거야" title="제목으로 바로 가기">​</a></h2><p>가장 햇갈리고 오해하기 쉬운 것이 SSG, SSR 개념이 들어가니 모든 페이지가 정적으로 구어져있고 페이지 이동마다 Server Side에서 구어진 파일을 응답해서 탐색하겟지? 일 수 있습니다.</p><p>하지만 아닙니다! <ins><strong>첫 요청하는 페이지에 대해서만</strong></ins> SSG 혹은 SSR으로 Server Side에서 미리 구어 놓은 파일을 응답하는 것이고 그 이후부터는 router를 통해 이동하는 것은 CSR 입니다.</p><p>사실 next.js에서 말하는 SSG와 SSR은 Server Side에서 build 시점에 구어 줄까?<sup>SSG</sup> 아님 요청마다 구어 줄까?<sup>SSR</sup> 라고 봐도 무방합니다.</p><p>결국에는 첫 요청하는 페이지만 Server Side에서 구어진 파일을 사용하고 이후 부터는 CSR입니다.</p><p>그렇기 때문에 전역 상태와 같은 것이 가능한 것입니다. 첫 요청한 페이지를 SPA 삼아서 CSR를 하기 때문이죠 마치 다른 페이지로 이동하면 다른 구어진 파일을 사용했구나 싶을 수 있지만 사실 CSR으로 이동 중 인 것입니다.</p><blockquote><p>물론 이동한 경로에서 새로고침을 하면 해당 URL 기준으로 다시 구어진 파일을 받겠지만요</p></blockquote><p>그래서 next.js의 SSR를 설명할 때 SSG와 SSR를 빼고 설명하기가 참 어려운 거 같습니다.</p><p>이 때문에 next.js에서 말하는 SSR을 말 그대로 Server Side에서 처리하는 렌더링이라고 생각하시는게 이해에 좋습니다.</p><div class="admonition admonition-info alert alert--info"><div class="admonition-heading"><h5><span class="admonition-icon"><svg xmlns="http://www.w3.org/2000/svg" width="14" height="16" viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>info</h5></div><div class="admonition-content"><p>참고로 next.js의 Pre Rendering 시스템은 기본적으로 SSG으로 동작하며 Server Side에서 build시 기본 파일을 구어내고 매 요청마다 재사용하게 됩니다.</p></div></div><h2 class="anchor anchorWithHideOnScrollNavbar_GLuy" id="serverless">serverless<a class="hash-link" href="#serverless" title="제목으로 바로 가기">​</a></h2><p>Static으로 구어지기 때문에 next.js server 이외 serverless deployment가 동작할 수 있는 것을 생각할 수 있습니다.</p><p>사실 이 부분이 궁금했습니다. 이걸 잘 응용하면 굳이 정적 사이트 생성을 위해서 <code>Gatsby.js</code> 을 사용하지 않을 수 있을까라는 생각으로 말이죠</p><h3 class="anchor anchorWithHideOnScrollNavbar_GLuy" id="한번-해보자">한번 해보자<a class="hash-link" href="#한번-해보자" title="제목으로 바로 가기">​</a></h3><p>실습을 위해서 <a href="https://github.com/parkgang/next.js-ssg-tutorial" target="_blank" rel="noopener noreferrer">parkgang/next.js-ssg-tutorial</a> 코드를 참고하시면 됩니다.</p><div class="admonition admonition-note alert alert--secondary"><div class="admonition-heading"><h5><span class="admonition-icon"><svg xmlns="http://www.w3.org/2000/svg" width="14" height="16" viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>note</h5></div><div class="admonition-content"><p>코드 상태는 정말 안 좋으므로 돌아가는 샘플로서만 사용해 주세요.</p><blockquote><p>해당 글 샘플을 위해서 태어난 코드라 상태가 🤭</p></blockquote></div></div><div class="admonition admonition-note alert alert--secondary"><div class="admonition-heading"><h5><span class="admonition-icon"><svg xmlns="http://www.w3.org/2000/svg" width="14" height="16" viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>note</h5></div><div class="admonition-content"><p>해당 글을 위해서 따로 소스 코드를 생성할 까 싶었지만 사전에 미리 SSG를 테스트 하면서 이용 된 <a href="https://docs.microsoft.com/ko-kr/azure/static-web-apps/deploy-nextjs" target="_blank" rel="noopener noreferrer">정적으로 렌더링된 Next.js 웹 사이트 배포</a> 템플릿이 글에 사용할 수 있어서 해당 템플릿 코드를 수정해서 사용했습니다.</p></div></div><h3 class="anchor anchorWithHideOnScrollNavbar_GLuy" id="export">export<a class="hash-link" href="#export" title="제목으로 바로 가기">​</a></h3><p>제가 미리 <code>export</code> 명령어를 작성해 놓았습니다.</p><p><code>next</code> 디렉터리에서 <code>npm run export</code> 를 실행하여 <code>express/public</code> 으로 Static Html으로 export 되는지 확인합니다.</p><blockquote><p>굳이 <code>express/public</code> 으로 export 하는 이유는 이따가 설명드릴께요.</p></blockquote><h3 class="anchor anchorWithHideOnScrollNavbar_GLuy" id="왜-파일시스템에서는-안되는-걸까">왜 파일시스템에서는 안되는 걸까?<a class="hash-link" href="#왜-파일시스템에서는-안되는-걸까" title="제목으로 바로 가기">​</a></h3><p>여기서 궁금증이 생겻습니다. Static Html 인데 파일 시스템에서 router 동작이 어떻게 될까요?</p><p><code>express/public</code> 에 있는 파일은 serverless 환경에서 돌릴 수 있는 순수한 Static Html 입니다.</p><p>한번 웹 브라우저에서 해당 파일 경로로 파일을 열어볼까요?</p><p><img loading="lazy" src="/assets/images/1-0ef72865d4bed156de72810131db00bc.png" class="img_dxBE"></p><p>짠, 뭔가 나오긴 하는데 대충 봐도 css가 모두 깨져있는거 같습니다. 원래 해당 앱은 아래와 같이 렌더링 되어야 하거든요</p><p><img loading="lazy" src="/assets/images/2-463384529126684420489a6b2fb28dd6.png" class="img_dxBE"></p><p>이외에도 link인 파란색 글자를 클릭해보면 아래와 같은 화면이 나오면서 정상동작 하지 않는 것을 확인할 수 있습니다. url 경로를 보더라도 에초에 존재할 수 없는 경로로 요청을 보내는 것도 확인할 수 있습니다.</p><p><img loading="lazy" src="/assets/images/3-0c95f525e0dc85a24e126c2c34973485.png" class="img_dxBE"></p><p>이에 대한 이유는 export된 파일의 <code>index.html</code> 을 열어보면 알 수 있습니다. 아마 대충 아래와 같은 형태를 가지고 있을 것입니다.</p><div class="language-html codeBlockContainer_nXGu theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_SpHG">index.html</div><div class="codeBlockContent_JJ8q"><pre tabindex="0" class="prism-code language-html codeBlock_lX7H thin-scrollbar"><code class="codeBlockLines_pw4m"><span class="token-line" style="color:#393A34"><span class="token doctype punctuation" style="color:#393A34;font-style:italic">&lt;!</span><span class="token doctype doctype-tag" style="color:#999988;font-style:italic">DOCTYPE</span><span class="token doctype" style="color:#999988;font-style:italic"> </span><span class="token doctype name" style="color:#999988;font-style:italic">html</span><span class="token doctype punctuation" style="color:#393A34;font-style:italic">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">html</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">lang</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">en</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">head</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">link</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">      </span><span class="token tag attr-name" style="color:#00a4db">rel</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">stylesheet</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">      </span><span class="token tag attr-name" style="color:#00a4db">data-href</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">https://fonts.googleapis.com/css?family=PT+Sans:300,400,700,800</span><span class="token tag attr-value entity named-entity" style="color:#36acaa">&amp;amp;</span><span class="token tag attr-value" style="color:#e3116c">display=optional</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">    </span><span class="token tag punctuation" style="color:#393A34">/&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">link</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">rel</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">preconnect</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">href</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">https://fonts.gstatic.com</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">crossorigin</span><span class="token tag" style="color:#00009f"> </span><span class="token tag punctuation" style="color:#393A34">/&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">meta</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">charset</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">utf-8</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"> </span><span class="token tag punctuation" style="color:#393A34">/&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">meta</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">name</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">viewport</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">content</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">width=device-width</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"> </span><span class="token tag punctuation" style="color:#393A34">/&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">meta</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">name</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">next-head-count</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">content</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">2</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"> </span><span class="token tag punctuation" style="color:#393A34">/&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">link</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">      </span><span class="token tag attr-name" style="color:#00a4db">rel</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">preload</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token tag" style="color:#00009f">      </span><span class="token tag attr-name" style="color:#00a4db">href</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">/_next/static/css/8964a576241b890e8a20.css</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">      </span><span class="token tag attr-name" style="color:#00a4db">as</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">style</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">    </span><span class="token tag punctuation" style="color:#393A34">/&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">link</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">      </span><span class="token tag attr-name" style="color:#00a4db">rel</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">stylesheet</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token tag" style="color:#00009f">      </span><span class="token tag attr-name" style="color:#00a4db">href</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">/_next/static/css/8964a576241b890e8a20.css</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">      </span><span class="token tag attr-name" style="color:#00a4db">data-n-g</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">    </span><span class="token tag punctuation" style="color:#393A34">/&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">noscript</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">data-n-css</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">noscript</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">script</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">      </span><span class="token tag attr-name" style="color:#00a4db">defer</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">      </span><span class="token tag attr-name" style="color:#00a4db">nomodule</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token tag" style="color:#00009f">      </span><span class="token tag attr-name" style="color:#00a4db">src</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">/_next/static/chunks/polyfills-a40ef1678bae11e696dba45124eadd70.js</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">    </span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token script"></span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">script</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">head</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">html</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><br></span></code></pre><div class="buttonGroup_rq_W"><button type="button" aria-label="클립보드에 코드 복사" title="복사" class="clean-btn"><span class="copyButtonIcons_gVBA" aria-hidden="true"><svg class="copyButtonIcon_Yh5B" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_vsWg" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>보니까 각종 css 및 script에 대한 정보를 <code>/</code> 경로로 요청하는 것을 볼 수 있습니다.</p><p>당연히 <code>/</code> 하위 경로에 해당 파일이 없을 테니 css가 깨지는 것은 당연합니다.<br>
<!-- -->한번 <code>index.html</code> 만 <code>/</code> 으로 되어 있는 부분을 모두 <code>./</code> 으로 변경하고 다시 열어볼까요?</p><div class="admonition admonition-tip alert alert--success"><div class="admonition-heading"><h5><span class="admonition-icon"><svg xmlns="http://www.w3.org/2000/svg" width="12" height="16" viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>tip</h5></div><div class="admonition-content"><p>Editor에서 <code>/_next</code> =&gt; <code>./_next</code> 으로 찾아서 변경하면 편리합니다.</p></div></div><p><img loading="lazy" src="/assets/images/4-37e7d5a2573336e52b2660c48ec2e5c8.png" class="img_dxBE"></p><p>이제 css 파일이 깨지지 않고 정상적으로 렌더링되는 것을 확인할 수 있습니다.
하지만 여전히 router 기능은 동작하지 않는 것을 확인할 수 있습니다. 왜 그런 것 일까요?</p><h3 class="anchor anchorWithHideOnScrollNavbar_GLuy" id="express-server">express server<a class="hash-link" href="#express-server" title="제목으로 바로 가기">​</a></h3><p>사실 기본 옵션으로 <code>next export</code> 되었을 때의 경로가 <code>/</code> 으로 설정되어 있다는 것과 link시 이동되는 경로도 <code>/</code> 를 기준으로 하고 있는 것을 보면 결국 리소스 탐색을 위해서 <code>basePath</code> 가 필요하다는 것을 알 수 있습니다.</p><p><code>basePath</code> 지정하는 가장 쉬운 테스트 방법으로 web server에서 static file를 서빙해주는 것입니다.</p><div class="admonition admonition-info alert alert--info"><div class="admonition-heading"><h5><span class="admonition-icon"><svg xmlns="http://www.w3.org/2000/svg" width="14" height="16" viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>info</h5></div><div class="admonition-content"><p>도메인 자체가 리소스의 <code>/</code> 이기 때문입니다.</p></div></div><p>중요한 것은 next.js server 이외에서 돌아갈 수 있는 것입니다.
static html을 클라우드와 같은 static web host에 push하고 사용할 것이기 때문입니다.</p><div class="admonition admonition-note alert alert--secondary"><div class="admonition-heading"><h5><span class="admonition-icon"><svg xmlns="http://www.w3.org/2000/svg" width="14" height="16" viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>note</h5></div><div class="admonition-content"><p>사실 export된 static 파일을 파일시스템에서 돌려볼 일은 없을 것입니다. 그럼에도 넣은 이유는 메커니즘에 대한 설명을 위한 것이었습니다.</p></div></div><p>이를 위한 테스트를 위해서 <code>express</code> 에 express server 코드를 작성해 놓았습니다.</p><div class="admonition admonition-note alert alert--secondary"><div class="admonition-heading"><h5><span class="admonition-icon"><svg xmlns="http://www.w3.org/2000/svg" width="14" height="16" viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>note</h5></div><div class="admonition-content"><p>일부로 express 코드도 공식문서와 동일하게 맞춰놓았습니다. 코드 리딩이 쉽도록요!</p></div></div><p>아까전에 <code>index.html</code> 경로 수정해서 찝찝하므로 다시 <code>next export</code> 후 <code>express</code> 디렉터리에서 <code>npm run start</code> 를 실행해서 서빙되는 정적파일이 잘 동작하는지 확인해봅시다.</p><p><img loading="lazy" src="/assets/images/5-b60933a94bf2cf49b2af8d995bbb7f38.png" class="img_dxBE"></p><p>next.js server 이외 다른 server에서 css 및 router가 정상적으로 동작하는 것을 볼 수 있습니다.</p><div class="admonition admonition-tip alert alert--success"><div class="admonition-heading"><h5><span class="admonition-icon"><svg xmlns="http://www.w3.org/2000/svg" width="12" height="16" viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>tip</h5></div><div class="admonition-content"><p>만약, 도메인의 하위 경로를 바꾸고 싶다면 <a href="https://nextjs.org/docs/api-reference/next.config.js/basepath" target="_blank" rel="noopener noreferrer">basepath</a> 를 참고하세요.</p></div></div><h3 class="anchor anchorWithHideOnScrollNavbar_GLuy" id="숨겨진-router의-원리">숨겨진 router의 원리<a class="hash-link" href="#숨겨진-router의-원리" title="제목으로 바로 가기">​</a></h3><p>맨 위에서 부터 첫 페이지 요청만 html 파일을 받고 이후에는 CSR이라고 설명했었습니다.
다시 한번 export된 파일의 구조를 한번 봐볼까요?</p><p><img loading="lazy" src="/assets/images/6-05f39f0c1f570db072d5812d000b1c0f.png" class="img_dxBE"></p><p>만약, <code>http://localhost:3000/project/facebook-react/</code> 경로에서 새로고침을 한다면 어떤 html 파일을 받아와야 할까요?</p><p>next.js server 이였다면 똑똑하게 이 요청은 <code>project/[path].tsx</code> 경로야! 하면서 SSR 이후 파일은 반환해줄 것입니다.</p><p>하지만 위의 테스트 시나리오는 next.js server 이외 처리되었습니다. 때문에 요청하는 경로에 파일이 없으면 그냥 없는 것입니다.</p><p>이를 위해서 <code>next.config.js</code> 파일을 보면 <code>trailingSlash: true</code> option 처리가 되어있는 것을 확인할 수 있습니다.</p><p>웹 개발자라면 새로고침을 하더라도 위 캡쳐사진의 파일 하이어라키 덕분에 정상적으로 router 되는 것을 확인하실 수 있습니다.</p><blockquote><p>모르겠다면 댓글주세요. 🤗</p></blockquote><h3 class="anchor anchorWithHideOnScrollNavbar_GLuy" id="생성되지-않은-동적경로의-경우는">생성되지 않은 동적경로의 경우는?<a class="hash-link" href="#생성되지-않은-동적경로의-경우는" title="제목으로 바로 가기">​</a></h3><p>동적인 경로의 경우 <code>getStaticPaths()</code> 으로 생성되지 않았다면 어떻게 될까요?</p><p>제가 예제 코드에서 <code>http://localhost:3000/post/[id]</code> 경로의 경우 동적 경로이지만 <code>getStaticPaths()</code> 으로 생성되지 않은 것을 확인할 수 있습니다.</p><div class="admonition admonition-info alert alert--info"><div class="admonition-heading"><h5><span class="admonition-icon"><svg xmlns="http://www.w3.org/2000/svg" width="14" height="16" viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>info</h5></div><div class="admonition-content"><p>export 결과물을 보면 아래와 같습니다. 이러면 당연히 새로고침하면 문제가 발생하겠죠?</p><p><img loading="lazy" src="/assets/images/7-7ea6b9141697c4b7ca782a39d9116667.png" class="img_dxBE"></p></div></div><p>한번 해볼까요? express server를 시작해서 아래의 영역을 클릭해서 들어가 봅시다.</p><p><img loading="lazy" src="/assets/images/8-f8a8940fc184fcb5952e5299ac8e7153.png" class="img_dxBE"></p><p>정상적으로 나오는 것을 확인할 수 있습니다. <code>express/public/index.html</code> 의 파일을 받아서 CSR 처리를 통해 router 되었기 때문입니다. 이제 여기서 새로고침을 하면 어떻게 될까요?</p><p><img loading="lazy" src="/assets/images/9-ba2a98ff7273dfbb555c36bff28d141f.png" class="img_dxBE"></p><p>아래와 같이 요청한 경로에 리소스가 없기 때문에 새로고침에 실패? 하는 것을 볼 수 있습니다. 만약 next.js server에서 해당 경로에서 새로고침 했다면 정상적으로 동작했을 것입니다. next.js server는 해당 경로가 어떤 리소스를 필요로 하는지 알고 있기 때문이죠</p><p><img loading="lazy" src="/assets/images/10-a793c7ed71c068f0243f3cf8b90c0571.png" class="img_dxBE"></p><p>사실 <code>next export</code> 으로 사용한다는 것은 블로그와 같이 정말 정적인 데이터인 경우 사용하는 시나리오가 대부분 일 것이기 때문에 이와 같은 시나리오의 경우는 매우 스페셜한 케이스라고 생각됩니다.</p><p>중요한 것은 next.js server 이외 돌아가는 메커니즘을 이해하는 것입니다.</p><h3 class="anchor anchorWithHideOnScrollNavbar_GLuy" id="사용을-추천하지-않는-exportpathmap">사용을 추천하지 않는 <code>exportPathMap</code><a class="hash-link" href="#사용을-추천하지-않는-exportpathmap" title="제목으로 바로 가기">​</a></h3><p><code>next export</code> 와 관련되어 찾아보면 <code>next.config.js</code> 의 <code>exportPathMap</code> 옵션에 대해 그냥 써놓은 글이 많습니다.</p><p>결론부터 말하면 이제 사용되지 않습니다. (사실 사용하는 법도 모르겠습니다) <code>getStaticPaths()</code> 가 동적인 경로를 반환해주기 때문이죠</p><p>해당 내용은 <a href="https://github.com/vercel/next.js/issues/10983#issuecomment-597829065" target="_blank" rel="noopener noreferrer">github issue로도 open</a> 되어 있는 상태입니다.</p><p>이걸 왜 사용하는지 제대로 설명해준 사람도 거의 없고 공식문서도 아직 내용이 반영되지 않은거 같아 시간이 많이 소모되었습니다...😾</p><div class="admonition admonition-info alert alert--info"><div class="admonition-heading"><h5><span class="admonition-icon"><svg xmlns="http://www.w3.org/2000/svg" width="14" height="16" viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>info</h5></div><div class="admonition-content"><p>에초에 동적 경로에서 <code>getStaticProps()</code> 만 사용하면 <code>Error: getStaticPaths is required for dynamic SSG pages</code> 가 출력되어 export가 안됩니다.</p></div></div><h2 class="anchor anchorWithHideOnScrollNavbar_GLuy" id="마무리">마무리<a class="hash-link" href="#마무리" title="제목으로 바로 가기">​</a></h2><p>사실 제대로 next.js를 많이 사용하고 공부 헀다면 이런 질문이 나오지 않을 수 있다고 생각하기도 합니다.</p><p>하지만 그럼에도 불구하고 next.js의 SSR을 햇갈려하는 글은 간간히 보이는 걸로 보아 나만 그런건 아닌가 싶은 안심이 들긴했습니다.</p><p>특히, jsp와 같은 Server Side Script 언어와 대조를 하다보니 더욱 더 햇갈렸습니다.</p><p>보통 블로그와 같이 정적 웹을 만든다고 하면 <code>Gatsby.js</code> 가 주로 생각나고 많이 사용되는 것으로 알고 있는데 차란히 next.js로 SSG, SSR을 모두 처리하는게 더 좋지 아늘까? 하면서 더 궁금해서 SSG를 더 깊이 공부하게 된 거 같습니다.</p><p>해당 글이 next.js의 SSG 이해에 도움이 되셨으면 좋겠습니다. 언제든지 질문과 피드백은 환영합니다. 읽어주셔서 감사합니다.</p>]]></content>
        <category label="nextjs" term="nextjs"/>
        <category label="SSG" term="SSG"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[next.js에서 recoil 사용하기]]></title>
        <id>/2021/05/06/using-recoil-in-nextjs</id>
        <link href="https://parkgang.github.io/blog/2021/05/06/using-recoil-in-nextjs"/>
        <updated>2021-05-05T18:06:21.000Z</updated>
        <summary type="html"><![CDATA[recoil 을 CSR 에서는 사용해 보았지만 next.js 와 같은 SSR 에서 사용한 사례는 찾기가 어려웠습니다. 이번 기회에 next.js 에서 recoil 을 사용하는 방법을 알아보도록 하겠습니다.]]></summary>
        <content type="html"><![CDATA[<p><img loading="lazy" src="/assets/images/thumbnail-a0ac33d4ae09aa8671de2cddff3c3e96.png" class="img_dxBE"></p><p><code>recoil</code> 을 <code>CSR</code> 에서는 사용해 보았지만 <code>next.js</code> 와 같은 <code>SSR</code> 에서 사용한 사례는 찾기가 어려웠습니다. 이번 기회에 <code>next.js</code> 에서 <code>recoil</code> 을 사용하는 방법을 알아보도록 하겠습니다.</p><p>원래는 redux를 사용했었지만 기본적으로 필요로하는 코드의 양이 많아 내가 원하는 상태를 빠르게 저장하고 빼서 쓰고 싶었는데 개발하면서 딜레이가 생기는 경험이 있었습니다.</p><p>물론 지금은 redux toolkit이 나와서 많이 해소 된거 같지만 facebook이 직접 개발하는 recoil이 앞으로 더 발전가능성이 높아서 사용하게 되었습니다.</p><p>next.js는 SSR를 지원하기 때문에 각각의 페이지 별로 정적파일이 생성되어 CSR과 햇갈릴 수 있습니다. 하지만 사용하면서 크게 다른 점은 없습니다.</p><div class="admonition admonition-note alert alert--secondary"><div class="admonition-heading"><h5><span class="admonition-icon"><svg xmlns="http://www.w3.org/2000/svg" width="14" height="16" viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>note</h5></div><div class="admonition-content"><p>기본적으로 CSR과 SSR의 차이, next.js와 recoil에 대해 기본적인 이해를 기반하고 설명합니다.</p></div></div><h2 class="anchor anchorWithHideOnScrollNavbar_GLuy" id="프로젝트를-생성해보자">프로젝트를 생성해보자<a class="hash-link" href="#프로젝트를-생성해보자" title="제목으로 바로 가기">​</a></h2><div class="admonition admonition-info alert alert--info"><div class="admonition-heading"><h5><span class="admonition-icon"><svg xmlns="http://www.w3.org/2000/svg" width="14" height="16" viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>info</h5></div><div class="admonition-content"><p>실습이 진행된 코드는 <a href="https://github.com/parkgang/next.js-with-recoil" target="_blank" rel="noopener noreferrer">parkgang/next.js-with-recoil</a> 에서 확인하실 수 있습니다.</p></div></div><p>먼저 아래의 명령어로 next.js 프로젝트를 실행하도록 하겠습니다.</p><div class="language-shell codeBlockContainer_nXGu theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_JJ8q"><pre tabindex="0" class="prism-code language-shell codeBlock_lX7H thin-scrollbar"><code class="codeBlockLines_pw4m"><span class="token-line" style="color:#393A34"><span class="token plain">npx create-next-app</span><br></span></code></pre><div class="buttonGroup_rq_W"><button type="button" aria-label="클립보드에 코드 복사" title="복사" class="clean-btn"><span class="copyButtonIcons_gVBA" aria-hidden="true"><svg class="copyButtonIcon_Yh5B" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_vsWg" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><img loading="lazy" src="/assets/images/1-9d4a8f0aeaf2f52005c9bd31f7bfe09d.png" class="img_dxBE"></p><div class="admonition admonition-note alert alert--secondary"><div class="admonition-heading"><h5><span class="admonition-icon"><svg xmlns="http://www.w3.org/2000/svg" width="14" height="16" viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>note</h5></div><div class="admonition-content"><p>공식으로 제공하는 <a href="https://github.com/vercel/next.js/tree/canary/examples/with-recoil" target="_blank" rel="noopener noreferrer">with-recoil</a> 템플릿이 있었지만 마지막 업데이트가 거즘 8개월 전이고 recoil 버전 업도 많이 된 상태이기 때문에 사용하지 않았습니다.</p></div></div><h2 class="anchor anchorWithHideOnScrollNavbar_GLuy" id="recoil를-추가하자">recoil를 추가하자<a class="hash-link" href="#recoil를-추가하자" title="제목으로 바로 가기">​</a></h2><p>아래의 명령어로 next.js 프로젝트에 recoil를 추가해줍니다.</p><div class="language-shell codeBlockContainer_nXGu theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_JJ8q"><pre tabindex="0" class="prism-code language-shell codeBlock_lX7H thin-scrollbar"><code class="codeBlockLines_pw4m"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">npm</span><span class="token plain"> i recoil</span><br></span></code></pre><div class="buttonGroup_rq_W"><button type="button" aria-label="클립보드에 코드 복사" title="복사" class="clean-btn"><span class="copyButtonIcons_gVBA" aria-hidden="true"><svg class="copyButtonIcon_Yh5B" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_vsWg" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><blockquote><p>next.js는 pages 별로 정적 파일을 찍어낼 텐데 어떻게 하나의 상태 관리를 할 수 있을까요?</p></blockquote><p>정답은 <code>_app.js</code> 에 있습니다. next.js의 모든 pages는 렌더링을 거치기 전에 <code>/_app.js</code> 를 거칩니다.</p><p>우리가 recoil를 사용할 때 recoil 상태를 사용하는 컴포넌트의 최상위 부모 트리에 <code>&lt;RecoilRoot&gt;</code> 가 필요한데 해당 파일에 wrap 해주면 됩니다.</p><h3 class="anchor anchorWithHideOnScrollNavbar_GLuy" id="기본적인-_appjs-구조">기본적인 <!-- -->_<!-- -->app.js 구조<a class="hash-link" href="#기본적인-_appjs-구조" title="제목으로 바로 가기">​</a></h3><p>여기서 <code>Component</code> 는 각 pages component가 들어오고, <code>pageProps</code> 는 getInitialProps를 통해 들어온 props들을 나타냅니다.</p><div class="language-jsx codeBlockContainer_nXGu theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_SpHG">/pages/_app.js</div><div class="codeBlockContent_JJ8q"><pre tabindex="0" class="prism-code language-jsx codeBlock_lX7H thin-scrollbar"><code class="codeBlockLines_pw4m"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function maybe-class-name" style="color:#d73a49">MyApp</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter punctuation" style="color:#393A34">{</span><span class="token parameter"> </span><span class="token parameter maybe-class-name">Component</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> pageProps </span><span class="token parameter punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag class-name" style="color:#00009f">Component</span><span class="token tag" style="color:#00009f"> </span><span class="token tag spread punctuation" style="color:#393A34">{</span><span class="token tag spread operator" style="color:#393A34">...</span><span class="token tag spread" style="color:#00009f">pageProps</span><span class="token tag spread punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"> </span><span class="token tag punctuation" style="color:#393A34">/&gt;</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">default</span><span class="token plain"> </span><span class="token maybe-class-name">MyApp</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup_rq_W"><button type="button" aria-label="클립보드에 코드 복사" title="복사" class="clean-btn"><span class="copyButtonIcons_gVBA" aria-hidden="true"><svg class="copyButtonIcon_Yh5B" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_vsWg" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithHideOnScrollNavbar_GLuy" id="recoilroot-적용">RecoilRoot 적용<a class="hash-link" href="#recoilroot-적용" title="제목으로 바로 가기">​</a></h3><p>여기에 Component 코드를 <code>RecoilRoot</code> 로 wrap 해주면 됩니다.</p><div class="language-jsx codeBlockContainer_nXGu theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_SpHG">/pages/_app.js</div><div class="codeBlockContent_JJ8q"><pre tabindex="0" class="prism-code language-jsx codeBlock_lX7H thin-scrollbar"><code class="codeBlockLines_pw4m"><span class="token-line" style="color:#393A34"><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> </span><span class="token imports maybe-class-name">RecoilRoot</span><span class="token imports"> </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"recoil"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function maybe-class-name" style="color:#d73a49">MyApp</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter punctuation" style="color:#393A34">{</span><span class="token parameter"> </span><span class="token parameter maybe-class-name">Component</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> pageProps </span><span class="token parameter punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag class-name" style="color:#00009f">RecoilRoot</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag class-name" style="color:#00009f">Component</span><span class="token tag" style="color:#00009f"> </span><span class="token tag spread punctuation" style="color:#393A34">{</span><span class="token tag spread operator" style="color:#393A34">...</span><span class="token tag spread" style="color:#00009f">pageProps</span><span class="token tag spread punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"> </span><span class="token tag punctuation" style="color:#393A34">/&gt;</span><span class="token plain-text"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain-text">    </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag class-name" style="color:#00009f">RecoilRoot</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">default</span><span class="token plain"> </span><span class="token maybe-class-name">MyApp</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup_rq_W"><button type="button" aria-label="클립보드에 코드 복사" title="복사" class="clean-btn"><span class="copyButtonIcons_gVBA" aria-hidden="true"><svg class="copyButtonIcon_Yh5B" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_vsWg" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithHideOnScrollNavbar_GLuy" id="기본적인-상태관리-방법은">기본적인 상태관리 방법은?<a class="hash-link" href="#기본적인-상태관리-방법은" title="제목으로 바로 가기">​</a></h2><p>자, 아직 남은 문제가 있지만 기본적인 recoil를 사용할 수 있는 상태까지 왔습니다.</p><h3 class="anchor anchorWithHideOnScrollNavbar_GLuy" id="테스트를-해보자">테스트를 해보자!<a class="hash-link" href="#테스트를-해보자" title="제목으로 바로 가기">​</a></h3><p>일단 잘 작동하는지 테스트를 해볼까요? <code>/states</code> 디렉터리를 생성하고 내부에 <code>index.js</code>를 생성해 봅시다.</p><p><img loading="lazy" src="/assets/images/2-cc925394ef2ec5761749ae25c33f519c.png" class="img_dxBE"></p><p>해당 파일에 아래의 코드를 작성합니다.</p><div class="language-js codeBlockContainer_nXGu theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_SpHG">/states/index.js</div><div class="codeBlockContent_JJ8q"><pre tabindex="0" class="prism-code language-js codeBlock_lX7H thin-scrollbar"><code class="codeBlockLines_pw4m"><span class="token-line" style="color:#393A34"><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> atom </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"recoil"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> pageNameState </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">atom</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token literal-property property" style="color:#36acaa">key</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"pageNameState"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword module" style="color:#00009f">default</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">""</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup_rq_W"><button type="button" aria-label="클립보드에 코드 복사" title="복사" class="clean-btn"><span class="copyButtonIcons_gVBA" aria-hidden="true"><svg class="copyButtonIcon_Yh5B" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_vsWg" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>해당 파일의 코드를 아래와 같이 변경합니다.</p><div class="language-jsx codeBlockContainer_nXGu theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_SpHG">/pages/index.js</div><div class="codeBlockContent_JJ8q"><pre tabindex="0" class="prism-code language-jsx codeBlock_lX7H thin-scrollbar"><code class="codeBlockLines_pw4m"><span class="token-line" style="color:#393A34"><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> useRecoilState </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"recoil"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> pageNameState </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"../states"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token function-variable function maybe-class-name" style="color:#d73a49">IndexPage</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">pageName</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> setPageName</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">useRecoilState</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">pageNameState</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">div</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">div</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">        </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">h1</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text">Index Page!</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">h1</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">div</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">div</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">        </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">span</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text">pageName 상태: </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">pageName</span><span class="token punctuation" style="color:#393A34">}</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">span</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">div</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">div</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">        </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">button</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">          </span><span class="token tag attr-name" style="color:#00a4db">onClick</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript punctuation" style="color:#393A34">(</span><span class="token tag script language-javascript punctuation" style="color:#393A34">)</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript arrow operator" style="color:#393A34">=&gt;</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag script language-javascript" style="color:#00009f">            </span><span class="token tag script language-javascript function" style="color:#d73a49">setPageName</span><span class="token tag script language-javascript punctuation" style="color:#393A34">(</span><span class="token tag script language-javascript string" style="color:#e3116c">"IndexPage"</span><span class="token tag script language-javascript punctuation" style="color:#393A34">)</span><span class="token tag script language-javascript punctuation" style="color:#393A34">;</span><span class="token tag script language-javascript" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag script language-javascript" style="color:#00009f">          </span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">        </span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">          현재 페이지 이름으로 상태 변경</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">        </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">button</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">div</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">    </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">div</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">default</span><span class="token plain"> </span><span class="token maybe-class-name">IndexPage</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup_rq_W"><button type="button" aria-label="클립보드에 코드 복사" title="복사" class="clean-btn"><span class="copyButtonIcons_gVBA" aria-hidden="true"><svg class="copyButtonIcon_Yh5B" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_vsWg" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>router 되더라도 상태가 유지되는게 핵심이겟죠? 다른 pages도 만들어 봅시다.</p><p>아래의 파일을 생성하고 아래와 같이 코딩합니다.</p><div class="language-jsx codeBlockContainer_nXGu theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_SpHG">/pages/post.js</div><div class="codeBlockContent_JJ8q"><pre tabindex="0" class="prism-code language-jsx codeBlock_lX7H thin-scrollbar"><code class="codeBlockLines_pw4m"><span class="token-line" style="color:#393A34"><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports maybe-class-name">Link</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"next/link"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> useRecoilState </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"recoil"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> pageNameState </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"../states"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token function-variable function maybe-class-name" style="color:#d73a49">PostPage</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">pageName</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> setPageName</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">useRecoilState</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">pageNameState</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">div</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">div</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">        </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">h1</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text">Post Page!</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">h1</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">div</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">div</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">        </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">span</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text">pageName 상태: </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">pageName</span><span class="token punctuation" style="color:#393A34">}</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">span</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">div</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">div</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">        </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">button</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">          </span><span class="token tag attr-name" style="color:#00a4db">onClick</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript punctuation" style="color:#393A34">(</span><span class="token tag script language-javascript punctuation" style="color:#393A34">)</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript arrow operator" style="color:#393A34">=&gt;</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag script language-javascript" style="color:#00009f">            </span><span class="token tag script language-javascript function" style="color:#d73a49">setPageName</span><span class="token tag script language-javascript punctuation" style="color:#393A34">(</span><span class="token tag script language-javascript string" style="color:#e3116c">"PostPage"</span><span class="token tag script language-javascript punctuation" style="color:#393A34">)</span><span class="token tag script language-javascript punctuation" style="color:#393A34">;</span><span class="token tag script language-javascript" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag script language-javascript" style="color:#00009f">          </span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">        </span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">          현재 페이지 이름으로 상태 변경</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">        </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">button</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">div</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag class-name" style="color:#00009f">Link</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">href</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">/</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">        </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">button</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text">Index Pages 이동</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">button</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag class-name" style="color:#00009f">Link</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">    </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">div</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">default</span><span class="token plain"> </span><span class="token maybe-class-name">PostPage</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup_rq_W"><button type="button" aria-label="클립보드에 코드 복사" title="복사" class="clean-btn"><span class="copyButtonIcons_gVBA" aria-hidden="true"><svg class="copyButtonIcon_Yh5B" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_vsWg" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><code>post</code> 페이지로 이동하기 쉽게 아래의 코드를 추가합니다.</p><div class="language-jsx codeBlockContainer_nXGu theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_SpHG">/pages/index.js</div><div class="codeBlockContent_JJ8q"><pre tabindex="0" class="prism-code language-jsx codeBlock_lX7H thin-scrollbar"><code class="codeBlockLines_pw4m"><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports maybe-class-name">Link</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"next/link"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> useRecoilState </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"recoil"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> pageNameState </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"../states"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token function-variable function maybe-class-name" style="color:#d73a49">IndexPage</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">pageName</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> setPageName</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">useRecoilState</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">pageNameState</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">div</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">div</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">        </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">h1</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text">Index Page!</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">h1</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">div</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">div</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">        </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">span</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text">pageName 상태: </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">pageName</span><span class="token punctuation" style="color:#393A34">}</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">span</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">div</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">div</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">        </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">button</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">          </span><span class="token tag attr-name" style="color:#00a4db">onClick</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript punctuation" style="color:#393A34">(</span><span class="token tag script language-javascript punctuation" style="color:#393A34">)</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript arrow operator" style="color:#393A34">=&gt;</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag script language-javascript" style="color:#00009f">            </span><span class="token tag script language-javascript function" style="color:#d73a49">setPageName</span><span class="token tag script language-javascript punctuation" style="color:#393A34">(</span><span class="token tag script language-javascript string" style="color:#e3116c">"IndexPage"</span><span class="token tag script language-javascript punctuation" style="color:#393A34">)</span><span class="token tag script language-javascript punctuation" style="color:#393A34">;</span><span class="token tag script language-javascript" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag script language-javascript" style="color:#00009f">          </span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">        </span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">          현재 페이지 이름으로 상태 변경</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">        </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">button</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">div</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag class-name" style="color:#00009f">Link</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">href</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">/post</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain-text">        </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">button</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text">Post Pages 이동</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">button</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag class-name" style="color:#00009f">Link</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">    </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">div</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">default</span><span class="token plain"> </span><span class="token maybe-class-name">IndexPage</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup_rq_W"><button type="button" aria-label="클립보드에 코드 복사" title="복사" class="clean-btn"><span class="copyButtonIcons_gVBA" aria-hidden="true"><svg class="copyButtonIcon_Yh5B" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_vsWg" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithHideOnScrollNavbar_GLuy" id="테스트-결과">테스트 결과<a class="hash-link" href="#테스트-결과" title="제목으로 바로 가기">​</a></h3><p>next.js를 실행해보면 index page에서 변경된 상태가 post page까지 잘 전달되는 것을 볼 수 있습니다. 그 반대도 마찬가지 입니다.<br>
<!-- -->이로써 recoil이 정상적으로 동작하는 것을 확인하였습니다.</p><p><img loading="lazy" src="/assets/images/3-3933ff3f70fc419a6016f33f8dc423ee.png" class="img_dxBE">
<img loading="lazy" src="/assets/images/4-4b1fa124c50b7494436c327ac1176fd7.png" class="img_dxBE"></p><h2 class="anchor anchorWithHideOnScrollNavbar_GLuy" id="duplicate-atom-key-waring">Duplicate atom key Waring<a class="hash-link" href="#duplicate-atom-key-waring" title="제목으로 바로 가기">​</a></h2><p>동작에는 문제가 없지만 사실 next.js console에서는 Warning을 출력하고 있습니다.</p><div class="codeBlockContainer_nXGu theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_JJ8q"><pre tabindex="0" class="prism-code language-text codeBlock_lX7H thin-scrollbar"><code class="codeBlockLines_pw4m"><span class="token-line" style="color:#393A34"><span class="token plain">Duplicate atom key "pageNameState". This is a FATAL ERROR in</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      production. But it is safe to ignore this warning if it occurred because of</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      hot module replacement.</span><br></span></code></pre><div class="buttonGroup_rq_W"><button type="button" aria-label="클립보드에 코드 복사" title="복사" class="clean-btn"><span class="copyButtonIcons_gVBA" aria-hidden="true"><svg class="copyButtonIcon_Yh5B" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_vsWg" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>이는 SSR이라서 여러면 atom을 생성하면서 경고 메시지가 출력되는 것입니다.</p><p>현재 공식 <a href="https://github.com/facebookexperimental/Recoil/issues/733" target="_blank" rel="noopener noreferrer">이슈</a>로 open 되어 있습니다. 수정까지는 시간이 꽤 걸릴 수 있으니 경고 창을 보고 싶지 않다! 라면 우회 방법을 알려드리도록 하겠습니다.</p><h3 class="anchor anchorWithHideOnScrollNavbar_GLuy" id="우회-방법">우회 방법<a class="hash-link" href="#우회-방법" title="제목으로 바로 가기">​</a></h3><p>되게 간단합니다. recoil module에서 해당 경고 메시지를 주석처리 하는 방법입니다.</p><ol><li><code>node_modules/recoil</code> 의 디렉터리에서 모든 <code>recoil.js</code> 파일의 <code>registerNode</code> 함수를 찾습니다.</li><li>해당 함수를 잘 보시면 위에서 출력되는 경고 메시지를 출력해주는 함수입니다. <code>console.warn</code> 부분을 주석하면 더 이상 출력되지 않습니다.</li></ol><p><img loading="lazy" src="/assets/images/5-0109dd94fa660899881637eda26b0c4b.png" class="img_dxBE"></p><div class="admonition admonition-caution alert alert--warning"><div class="admonition-heading"><h5><span class="admonition-icon"><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16"><path fill-rule="evenodd" d="M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"></path></svg></span>caution</h5></div><div class="admonition-content"><p>이 방법은 개인 에게만 적용되며 추천하지 않습니다. 실제로 key가 중복되는 경우를 구별할 수 없기 때문입니다.</p></div></div><h2 class="anchor anchorWithHideOnScrollNavbar_GLuy" id="비동기-작업은-어떻게">비동기 작업은 어떻게?<a class="hash-link" href="#비동기-작업은-어떻게" title="제목으로 바로 가기">​</a></h2><p>이번에는 <code>selector</code> 함수를 이용하여 비동기 작업을 해보도록 하겠습니다.<br>
<code>Ajax</code> 를 위해 저는 <code>axios</code> 즐겨 사용하기 때문에 해당 모듈을 설치하도록 하겠습니다.</p><div class="language-shell codeBlockContainer_nXGu theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_JJ8q"><pre tabindex="0" class="prism-code language-shell codeBlock_lX7H thin-scrollbar"><code class="codeBlockLines_pw4m"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">npm</span><span class="token plain"> i axios</span><br></span></code></pre><div class="buttonGroup_rq_W"><button type="button" aria-label="클립보드에 코드 복사" title="복사" class="clean-btn"><span class="copyButtonIcons_gVBA" aria-hidden="true"><svg class="copyButtonIcon_Yh5B" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_vsWg" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>아래의 코드를 추가합니다.</p><div class="language-js codeBlockContainer_nXGu theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_SpHG">/states/index.js</div><div class="codeBlockContent_JJ8q"><pre tabindex="0" class="prism-code language-js codeBlock_lX7H thin-scrollbar"><code class="codeBlockLines_pw4m"><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> atom</span><span class="token imports punctuation" style="color:#393A34">,</span><span class="token imports"> selector </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"recoil"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports">axios</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"axios"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> pageNameState </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">atom</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token literal-property property" style="color:#36acaa">key</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"pageNameState"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword module" style="color:#00009f">default</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">""</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> getNameSelector </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">selector</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">  </span><span class="token literal-property property" style="color:#36acaa">key</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"getNameSelector"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">  </span><span class="token function-variable function" style="color:#d73a49">get</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">async</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> res </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">await</span><span class="token plain"> axios</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"http://localhost:3000/api/hello"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> res</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">data</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup_rq_W"><button type="button" aria-label="클립보드에 코드 복사" title="복사" class="clean-btn"><span class="copyButtonIcons_gVBA" aria-hidden="true"><svg class="copyButtonIcon_Yh5B" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_vsWg" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="admonition admonition-caution alert alert--warning"><div class="admonition-heading"><h5><span class="admonition-icon"><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16"><path fill-rule="evenodd" d="M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"></path></svg></span>caution</h5></div><div class="admonition-content"><p><code>selector</code> 에서 반환되는 값은 필요한 값만 반환해야합니다.</p><p>CSR에서는 axios의 res 값을 모두 반환해서 사용해도 문제가 없었는데 next.js에서는 모두 반환하면 에러가 발생합니다.</p><p>아마 테스트 해보시면 비동기 콜을 하는 page를 다른 페이지에서 link를 통해 들어가면 문제가 없지만 해당 page 주소로 바로 접속하면 아래와 같은 에러가 출력되면서 next.js server가 down 됩니다.</p><p><img loading="lazy" src="/assets/images/6-5dd5b7dd9d84ee4bd75e013ba5ee5a9a.png" class="img_dxBE"></p><p>axios 에서 return 데이터 중 <code>.data</code> 만을 사용하지 않고 모두 던지면 <code>selector</code> 호출 기록은 있지만 렌더링하다가 next.js에서 run time error 가 발생합니다.</p><p>해당 문제는 <code>npm run dev</code> 일 때만 발생합니다. 같은 코드인데 build 되어 start으로 실행 된 next.js server에서는 해당 문제가 발생하지 않습니다. 하지만 dev 환경의 live server가 되지 않기 때문에 전략적으로 필요한 데이터만 return 하여 사용하는 것이 좋아보입니다.</p></div></div><p>아래의 코드를 추가합니다.</p><div class="language-jsx codeBlockContainer_nXGu theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_SpHG">/pages/post.js</div><div class="codeBlockContent_JJ8q"><pre tabindex="0" class="prism-code language-jsx codeBlock_lX7H thin-scrollbar"><code class="codeBlockLines_pw4m"><span class="token-line" style="color:#393A34"><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports maybe-class-name">Link</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"next/link"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> useRecoilState</span><span class="token imports punctuation" style="color:#393A34">,</span><span class="token imports"> useRecoilValueLoadable </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"recoil"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> pageNameState</span><span class="token imports punctuation" style="color:#393A34">,</span><span class="token imports"> getNameSelector </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"../states"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token function-variable function maybe-class-name" style="color:#d73a49">PostPage</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">pageName</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> setPageName</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">useRecoilState</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">pageNameState</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> name </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">useRecoilValueLoadable</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">getNameSelector</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#00009f">switch</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">name</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">state</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">case</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"hasValue"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">div</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">          </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">div</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">            </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">h1</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text">Post Page!</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">h1</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">          </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">div</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">          </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">div</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">            </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">span</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text">pageName 상태: </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">pageName</span><span class="token punctuation" style="color:#393A34">}</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">span</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">          </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">div</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">          </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">div</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">            </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">button</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">              </span><span class="token tag attr-name" style="color:#00a4db">onClick</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript punctuation" style="color:#393A34">(</span><span class="token tag script language-javascript punctuation" style="color:#393A34">)</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript arrow operator" style="color:#393A34">=&gt;</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag script language-javascript" style="color:#00009f">                </span><span class="token tag script language-javascript function" style="color:#d73a49">setPageName</span><span class="token tag script language-javascript punctuation" style="color:#393A34">(</span><span class="token tag script language-javascript string" style="color:#e3116c">"PostPage"</span><span class="token tag script language-javascript punctuation" style="color:#393A34">)</span><span class="token tag script language-javascript punctuation" style="color:#393A34">;</span><span class="token tag script language-javascript" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag script language-javascript" style="color:#00009f">              </span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token tag" style="color:#00009f">            </span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">              현재 페이지 이름으로 상태 변경</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">            </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">button</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">          </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">div</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">          </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">div</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain-text">            </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">h1</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">{</span><span class="token known-class-name class-name">JSON</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">stringify</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">name</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">contents</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">}</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">h1</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">          </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">div</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">          </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag class-name" style="color:#00009f">Link</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">href</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">/</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">            </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">button</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text">Index Pages 이동</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">button</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">          </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag class-name" style="color:#00009f">Link</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">        </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">div</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">case</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"loading"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">div</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text">Loading...</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">div</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">case</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"hasError"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">div</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">name</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">contents</span><span class="token punctuation" style="color:#393A34">}</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">div</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">default</span><span class="token plain"> </span><span class="token maybe-class-name">PostPage</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup_rq_W"><button type="button" aria-label="클립보드에 코드 복사" title="복사" class="clean-btn"><span class="copyButtonIcons_gVBA" aria-hidden="true"><svg class="copyButtonIcon_Yh5B" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_vsWg" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><a href="https://ko.reactjs.org/docs/code-splitting.html#reactlazy" target="_blank" rel="noopener noreferrer">SSR에서는 Suspense를 지원하지 않기 때문에</a> <code>useRecoilValueLoadable</code> 를 사용해야합니다.</p><blockquote><p>찾아보니 SSR에서도 Suspense 사용할 수 있는 방법이 있습니다! 나중에 시간이 될 때 소개하도록 하겠습니다.</p></blockquote><h3 class="anchor anchorWithHideOnScrollNavbar_GLuy" id="테스트-결과-1">테스트 결과<a class="hash-link" href="#테스트-결과-1" title="제목으로 바로 가기">​</a></h3><p>아래와 같이 정상적으로 렌더링 되는 것을 확인할 수 있습니다.</p><p><img loading="lazy" src="/assets/images/7-045f4312932dfc10b832b55d0d54bcd2.png" class="img_dxBE"></p><div class="admonition admonition-tip alert alert--success"><div class="admonition-heading"><h5><span class="admonition-icon"><svg xmlns="http://www.w3.org/2000/svg" width="12" height="16" viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>tip</h5></div><div class="admonition-content"><p>혹시라도 해당 api가 어디서 만들어 진건지? 하시면 기본 템플릿으로 만들면 생성되는 next.js api를 사용한 것입니다 😉</p></div></div><h2 class="anchor anchorWithHideOnScrollNavbar_GLuy" id="빌드-시-경고-창">빌드 시 경고 창<a class="hash-link" href="#빌드-시-경고-창" title="제목으로 바로 가기">​</a></h2><p>자 이제 문제가 없는거 같지만 아직 한가지 더 남아있습니다...<br>
<!-- -->한번 <code>npm run build</code> 으로 build를 해보시겟어요? 또 경고가 출력됩니다.</p><p><img loading="lazy" src="/assets/images/8-e84a9150645a0633c2d9d3bc8e87ef21.png" class="img_dxBE"></p><p>build 시점에 <code>selector</code> 에서 호출하는 api가 정상이 아니면 에러가 발생합니다.</p><div class="admonition admonition-info alert alert--info"><div class="admonition-heading"><h5><span class="admonition-icon"><svg xmlns="http://www.w3.org/2000/svg" width="14" height="16" viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>info</h5></div><div class="admonition-content"><p>더 정확히 말하면 try 부분의 코드를 실행하는거 같습니다. 해당 부분에 <code>console.log</code> 와 같은 코드를 삽입하면 출력되는 것을 확인할 수 있습니다.</p></div></div><p>우리는 next.js의 api를 사용하고 있기 때문에 build 시점에 next.js server가 내려가 있으니 api에 호출에 실패에서 발생하는 메시지 입니다.</p><p>아래와 같이 해당 부분을 trycatch으로 묶는다면 catch에 걸리는 것을 확인할 수 있습니다.</p><div class="language-js codeBlockContainer_nXGu theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_SpHG">/states/index.js</div><div class="codeBlockContent_JJ8q"><pre tabindex="0" class="prism-code language-js codeBlock_lX7H thin-scrollbar"><code class="codeBlockLines_pw4m"><span class="token-line" style="color:#393A34"><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> atom</span><span class="token imports punctuation" style="color:#393A34">,</span><span class="token imports"> selector </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"recoil"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports">axios</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"axios"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> pageNameState </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">atom</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token literal-property property" style="color:#36acaa">key</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"pageNameState"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword module" style="color:#00009f">default</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">""</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> getNameSelector </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">selector</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token literal-property property" style="color:#36acaa">key</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"getNameSelector"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function-variable function" style="color:#d73a49">get</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">async</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#00009f">try</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> res </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">await</span><span class="token plain"> axios</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"http://localhost:3000/api/hello"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> res</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">data</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">catch</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">error</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">      </span><span class="token console class-name">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token template-string string" style="color:#e3116c">getNameSelector 에러 발생</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup_rq_W"><button type="button" aria-label="클립보드에 코드 복사" title="복사" class="clean-btn"><span class="copyButtonIcons_gVBA" aria-hidden="true"><svg class="copyButtonIcon_Yh5B" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_vsWg" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><img loading="lazy" src="/assets/images/9-1377f3de970b988e9ece6903c43e14eb.png" class="img_dxBE"></p><p>결론적으로 경고 메시지가 출력되어도, catch에 걸리더라도 <strong>구어진 정적파일은 문제가 없으며 next.js server가 실행했을 때 정상적으로 동작합니다.</strong></p><p><code>selector</code> get부분에 api EndPoint를 next.js 내부 api 말고 build 시점에 살아있는 api으로 호출한다면 경고 메시지 없이 빌드 되는 것을 확인할 수 있습니다.</p><h2 class="anchor anchorWithHideOnScrollNavbar_GLuy" id="마무리">마무리<a class="hash-link" href="#마무리" title="제목으로 바로 가기">​</a></h2><p>사용하는데 크게 어려운 점은 없지만 비동기 콜 부분에서 많은 시간을 소비하였습니다.</p><p>에러 발생 시 정보가 생각보다 디테일 하지 않았고 CSR에서는 되던건게 안되서 코드를 잘못짠건가?🧐 했습니다.</p><p>특히 axios 결과 값을 모두 return 했을 때 next.js server가 down되는 부분에서 많은 시간을 소비하였습니다.</p><p>어서 recoil이 공식 릴리즈되서 많은 사람들이 사용했으면 좋겠네요 언제든지 질문과 피드백은 환영합니다. 읽어주셔서 감사합니다.</p>]]></content>
        <category label="nextjs" term="nextjs"/>
        <category label="recoil" term="recoil"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[parkgang.log(2020)]]></title>
        <id>/2021/05/06/2020-retrospective</id>
        <link href="https://parkgang.github.io/blog/2021/05/06/2020-retrospective"/>
        <updated>2021-05-05T18:05:10.000Z</updated>
        <content type="html"><![CDATA[<p>공부한 걸 잘 정리하는 습관은 있었는데 한 해를 회고한 적이 없었습니다. 2020년을 회고하기엔 조금 늦은 2021 2분기 이지만 짧게 <code>첫</code> 회고를 해보려고 합니다.</p><div class="admonition admonition-info alert alert--info"><div class="admonition-heading"><h5><span class="admonition-icon"><svg xmlns="http://www.w3.org/2000/svg" width="14" height="16" viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>깃허브 첫 가입!</h5></div><div class="admonition-content"><p><img loading="lazy" src="/assets/images/1-3b75c626de2a03f9511283a12a40485b.png" class="img_dxBE"></p></div></div><div class="admonition admonition-info alert alert--info"><div class="admonition-heading"><h5><span class="admonition-icon"><svg xmlns="http://www.w3.org/2000/svg" width="14" height="16" viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>웹 제품을 만들기 위한 공부의 서막</h5></div><div class="admonition-content"><p><img loading="lazy" src="/assets/images/2-43e565269959b718c7e0168f3ab516ba.png" class="img_dxBE"></p></div></div><h2 class="anchor anchorWithHideOnScrollNavbar_GLuy" id="tldr">TL;DR<a class="hash-link" href="#tldr" title="제목으로 바로 가기">​</a></h2><ol><li>첫번째로 작성해보는 회고!</li><li>첫 직장! 🔥</li><li>전체적으로 웹 제품을 만드는 방법에 대해 알게 되었다.</li></ol><h2 class="anchor anchorWithHideOnScrollNavbar_GLuy" id="나의-2020년은">나의 2020년은?<a class="hash-link" href="#나의-2020년은" title="제목으로 바로 가기">​</a></h2><p>2020년은 처음으로 깃허브에 가입한 해이기도 하고 SW 엔지니어라는 직업으로 첫 출근을 한 해이기도 합니다.</p><p>저의 첫 개발은 C언어로 펌웨어 프로그래밍을 하다가 여기까지 오게 되었는데 그래서 그런지 front-end? back-end? 로 왜 구분을 하는 것이고 sql을 왜 배워야 하지? 이런 생각이 난잡하던 해이었습니다.</p><blockquote><p>전 C언어만 알면 모든 것을 해결할 수 있는 줄 알았거든요... 진심으로... 🥴</p></blockquote><p>그래도 다행히 2분기부터 대학 친구와 함께 JSP 스터디를 진행하면서 정신을 차리게 되었습니다. 아마 이 스터디가 없었더라면 전 매우 많이 후퇴되어 있었을 거 같아요.</p><p>근데 스터디를 진행하면서 느낀 것은 back-end의 경우 java를 사용헀기 때문에 C-family programming languages 답게 문법적으로나 동작에 대해서 이해가 안 되는 부분이 적었습니다.</p><p>문제는 front-end 이었는데요 태어나서 처음 보는 마크업 언어를 보고 이게 프로그래밍 언어인지... 아니라고 하기엔 문법이라는 게 보이긴 하는데 그래서 마크업이라고 하는 건 가... 이걸 어떻게 사용해야 하는지 감조차 안 오는 상태이었습니다.</p><blockquote><p>JS 친구는 덤이었습니다. C언어를 하다가 JS를 보니까 외계어인 줄 알았어요</p></blockquote><p>그래서 스터디가 종료되고 HTML, CSS, JS와 같이 front-end에 부족한 부분을 알아서 공부를 하면서 자연스럽게 프로그램 배포는 어떻게 되는 거지? 서버에 배포하면 된다고? 서버는 어떻게 만드는데? 원리는? 이런 식으로 계속 파고들어서 공부하게 되었습니다.</p><p>마침 회사에서도 클라우드와 DevOps를 경험하고 있던 시점이어서 서버와 관련된 모르는 것을 동료에게 물어보며 성장할 수 있었습니다.</p><blockquote><p>모두 고마워요! 🥰</p></blockquote><p>그 결과 연말에는 <a href="https://github.com/parkgang/modern-tier" target="_blank" rel="noopener noreferrer">modern-tier</a> 프로젝트를 진행하면서 CI/CD 자동화 라인까지 직접 만들어보게 되었습니다.</p><p>돌이켜보면 짧은 시간 안에 많은 성장을 했다는 것이 느껴집니다.</p><blockquote><p>사실 그냥 제 자신을 갈아 넣었습니다.</p></blockquote><div class="admonition admonition-note alert alert--secondary"><div class="admonition-heading"><h5><span class="admonition-icon"><svg xmlns="http://www.w3.org/2000/svg" width="14" height="16" viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>note</h5></div><div class="admonition-content"><p>전반적으로 웹 애플리케이션 제품 개발 한 사이클을 돌려서 기본을 배울 수 있는 시간이었습니다.</p></div></div><h2 class="anchor anchorWithHideOnScrollNavbar_GLuy" id="앞으로는">앞으로는?<a class="hash-link" href="#앞으로는" title="제목으로 바로 가기">​</a></h2><p>아직 부족한 것이 많지만 <code>2020</code> 년에는 웹 애플리케이션을 만드는 아주 큰 틀을 이해하는 시간이 되었습니다.</p><p>개발하면서 어떤 점이 부족하고 어떤 것을 더 중점으로 공부해야 하는지 index가 잡히는 계기가 되었습니다.</p><p><code>2021</code> 년에는 전반적으로 배운 기술을 복습하고 고도화할 수 있도록 노력하는 한 해가 되기를 목표하여 글을 마무리하겠습니다.</p>]]></content>
        <category label="개인 회고" term="개인 회고"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[깃허브 블로그 시작 이유]]></title>
        <id>/2021/05/06/why-start-github-blog</id>
        <link href="https://parkgang.github.io/blog/2021/05/06/why-start-github-blog"/>
        <updated>2021-05-05T17:05:10.000Z</updated>
        <summary type="html"><![CDATA[왜 굳이 SaaS 블로그를 사용하지 않고 깃허브 블로그를 선택하게 되었을까? 깃허브 블로그 첫 포스트로써 왜 깃허브 블로그를 사용하게 되었는지 알아보도록 하겠습니다.]]></summary>
        <content type="html"><![CDATA[<p>왜 굳이 <code>SaaS</code> 블로그를 사용하지 않고 깃허브 블로그를 선택하게 되었을까? 깃허브 블로그 첫 포스트로써 왜 깃허브 블로그를 사용하게 되었는지 알아보도록 하겠습니다.</p><h2 class="anchor anchorWithHideOnScrollNavbar_GLuy" id="이전의-나는">이전의 나는?<a class="hash-link" href="#이전의-나는" title="제목으로 바로 가기">​</a></h2><p>나의 첫 개발 블로그는 <code>velog</code> 에서 시작되었습니다.</p><p>처음에는 열정적으로 잘 작성하였지만 어째 사람들에게 정보를 공유하기 위한 개발 블로그 라는 성격 보다는 내가 공부한 내용을 복습하고 나중에 보려고 작성하는 느낌이 강하게 들었습니다.</p><p>더구나 이미 있는 글을 나에게 맞게 바꾸어 작성하게 되는 나를 발견하고 이럴꺼면 개인 노트에 작성하는게 더 효율적이라는 생각을 하게되었습니다.</p><p>이때부터 이전부터 봐왔던 notion을 공부해서 알게 된 지식을 모두 정리하기 시작하였습니다.</p><p><img loading="lazy" src="/assets/images/1-306695e487eeb729fd056e8829ec1538.png" class="img_dxBE"></p><blockquote><p>쭉쭉 늘어나는 페이지들...</p></blockquote><p>사실 notion에 웹 공유 기능이 있어서 열심히 notion에 작성하고 웹에 공유해서 블로그 처럼 사용하려고 했습니다. 하지만 터닝 포인트🔥 가 발생하게 되는데</p><h2 class="anchor anchorWithHideOnScrollNavbar_GLuy" id="왜-깃허브-블로그">왜 깃허브 블로그?<a class="hash-link" href="#왜-깃허브-블로그" title="제목으로 바로 가기">​</a></h2><p>제품(SW)에 대해 아주 간단하고 사소한 오류라도 사용자 풀이 적다면 해결 방법에 대해 찾기가 어렵습니다.</p><p>물론 개발자 실력이 좋다면 그동안 쌓아온 지식을 기반하여 아주 수월하게 트러블 슈팅을 진행할 수 있을 겁니다.</p><p>하지만 깊은 지식 없이 SW가 <code>돌아가는 것에 치중</code> 하여 학습된 상태로 예상 하지 못한 새로운 이슈를 만난다면 당황스럽고 사전에 같은 문제를 고민한 글에 의존하게 됩니다.</p><p><img loading="lazy" src="/assets/images/2-67d56e10c31128bd69e066ff216d644e.png" class="img_dxBE"></p><p>저는 각 토픽에 맞게 트러블 슈팅 내용을 notion에 기록하고 있었습니다.</p><p>요근래 공부하고 있는 부분에서 트러블 슈팅을 진행하면서 나와 같은 문제를 고민한 글이 많지 않다는 것을 직접 체감하게 되었습니다.</p><blockquote><p>이 트러블 슈팅 기록을 또 notion 작성해?</p></blockquote><p>물론 notion에도 계속 작성되고 있습니다. 하지만, 이전에 트러블 슈팅 경험을 살펴보면 글의 퀄리티 유무와 관계 없이 누군가 나와 같은 문제를 겪고 대충이라고 해결 방법을 적어 놓은 글을 보았을 때 많은 도움이 된다는 것을 느끼게 되었습니다.</p><blockquote><p>물론 공식문서를 보고 차근차근 배우고 트러블 슈팅하는게 맞지만 😔</p></blockquote><p>딱, 이맘때쯤 깃허브 블로그로 기술 분석에 대해 제가 궁금한 점을 딱 잡아서 작성된 글이 있었는데 그걸 읽고 반해버렸습니다.</p><p>notion에 작성할 때 아래의 Side effects를 고민하고 있던 시절이여서 깃허브 블로그가 더 매력적으로 다가왔습니다.</p><ol><li>이미지와 같은 정적파일이 날라가면 어떡하지?</li><li>다른 서비스로 마이그레이션은?</li><li>웹 공유를 하더라도 사람들이 많이 찾아줄까?</li></ol><p>그래서 전략적으로 듣고 까먹지 싫은 건 notion에 작성하고 사람들에게 가치를 전달할 수 있는 글은 깃허브 블로그에 작성해보자는 마음으로 시작되었습니다.</p>]]></content>
        <category label="blog" term="blog"/>
    </entry>
</feed>